Turn your web APIs into just another piece of your
Knowledge Graph
Franck Michel, Fabien Gandon

To cite this version:

Franck Michel, Fabien Gandon. Turn your web APIs into just another piece of your Knowledge
Graph. KGC 2023 - The Knowledge Graph Conference, May 2023, New York (NY), United States.
￿hal-04351695￿

HAL Id: hal-04351695

https://hal.science/hal-04351695

Submitted on 18 Dec 2023

HAL is a multi-disciplinary open access
archive for the deposit and dissemination of sci-
entific research documents, whether they are pub-
lished or not. The documents may come from
teaching and research institutions in France or
abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est
destinée au dépôt et à la diffusion de documents
scientifiques de niveau recherche, publiés ou non,
émanant des établissements d’enseignement et de
recherche français ou étrangers, des laboratoires
publics ou privés.

Distributed under a Creative Commons Attribution 4.0 International License

Turn your web APIs into just
another piece of your Knowledge Graph

Franck Michel0000−0001−9064−0463 and Fabien Gandon0000−0003−0543−1232

University Côte d’Azur, CNRS, Inria, I3S (UMR 7271), France
franck.michel@inria.fr, fabien.gandon@inria.fr

Abstract. Web APIs have become a de-facto standard to enable HTTP-based access
to machine-processable data. In this talk, I will present the SPARQL micro-service
architecture, a lightweight approach that bridges web APIs and RDF knowledge graphs
by making it possible to enforce a uniform data model over multiple sources, while using
SPARQL as a unique query language. I will illustrate how we apply these techniques
in the biodiversity area where multiple data sources provide complementary yet often
conflicting data, and how we can integrate in-house and public data sources in a seamless
knowledge graph supporting our applications and enriching the users’ experience.

Keywords: Web API · Knowledge Graph · Data Integration

Ever increasing amounts of data are being published on the web using a broad spectrum of
techniques ranging from web pages and raw files to data lakes, data registries or aggregators. In
particular, web APIs have become a de-facto standard to enable HTTP-based access to machine-
processable data. Despite this success, however, web APIs often fail in making data interopera-
ble, insofar as they commonly rely on proprietary data models and vocabularies that lack formal
semantics which is however essential to ensure reliable data integration. Leveraging knowledge
engineering and semantic web approaches can help in building bridges between these discon-
nected sources, and eventually achieve their integration to develop more clever applications.
In this talk, I will touch upon several approaches that can be used to query RDF knowledge
graphs, typically built using mapping-based lifting of legacy data, together with other data
sources accessible through web APIs. I will present the SPARQL micro-service architecture,
a lightweight approach to wrap a web API into a SPARQL endpoint that produces an RDF
graph at run-time by invoking the API. A SPARQL micro-service can assign dereferenceable
URIs to web API resources that were previously locked in silos, and turn them into standard
linked data resources.

This architecture bridges web APIs and knowledge graphs by making it possible to enforce
a uniform data model over multiple data sources, while using SPARQL as a unique query
language. Besides, SPARQL micro-services come with rich metadata that allow humans and
machines alike to discover them at web scale, and decide whether they can help in carrying
out a certain task.

I will illustrate how we apply these techniques in the biodiversity area, where multiple
data sources cover complementary and often overlapping regions, epochs or domains, but
may also report or rely on conflicting data and perspectives. I will also demonstrate how this
approach allowed us to integrate in-house and public data sources in a seamless knowledge
graph supporting our applications and enriching the users’ experience.

