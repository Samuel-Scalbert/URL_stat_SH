Constructing Metrics for Evaluating Multi-Relational
Association Rules in the Semantic Web from Metrics for
Scoring Association Rules
Minh Duc Tran, Claudia d’Amato, Andrea G. B. Tettamanzi, Binh Thanh

Nguyen

To cite this version:

Minh Duc Tran, Claudia d’Amato, Andrea G. B. Tettamanzi, Binh Thanh Nguyen. Constructing Met-
rics for Evaluating Multi-Relational Association Rules in the Semantic Web from Metrics for Scoring
Association Rules. IEEE-RIVF 2019 - International Conference on Computing and Communication
Technologies, Mar 2019, Da Nang, Vietnam. pp.65-70. ￿hal-02084977￿

HAL Id: hal-02084977

https://inria.hal.science/hal-02084977

Submitted on 30 Mar 2019

HAL is a multi-disciplinary open access
archive for the deposit and dissemination of sci-
entific research documents, whether they are pub-
lished or not. The documents may come from
teaching and research institutions in France or
abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est
destinée au dépôt et à la diffusion de documents
scientifiques de niveau recherche, publiés ou non,
émanant des établissements d’enseignement et de
recherche français ou étrangers, des laboratoires
publics ou privés.

Copyright

Constructing Metrics for Evaluating Multi-Relational
Association Rules in the Semantic Web from Metrics
for Scoring Association Rules

Tran Duc Minh
Thang Long University, Vietnam
tdminh2110@yahoo.com

Claudia d'Amato
University of Bari, Italy
claudia.damato@uniba.it

Andrea G. B. Tettamanzi
University of Cˆote d'Azur, CNRS, Inria, I3S, France
andrea.tettamanzi@unice.fr

Nguyen Thanh Binh
The University of Danang - University of Science and Technology, Vietnam
ntbinh@dut.udn.vn

Abstract—We propose a method to construct asymmetric
metrics for evaluating the quality of multi-relational association
rules coded in the form of SWRL rules. These metrics are
derived from metrics for scoring association rules. We use each
constructed metric as a ﬁtness function for evolutionary inductive
programming employed to discover hidden knowledge patterns
(represented in SWRL) from assertional data of ontological
knowledge bases. This new knowledge can be integrated easily
within the ontology to enrich it. In addition, we also carry out
a search for the best metric to score candidate multi-relational
association rules in the evolutionary approach by experiment.
We performed experiments on three publicly available ontologies
validating the performances of our approach and comparing them
with the main state-of-the-art systems.

Keywords—Evolutionary Algorithms; Description Logics; Pat-

tern Discovery

I.

INTRODUCTION

The Semantic Web [1] (SW) has undergone a steady and
continuous development toward its primary objective, which
is to associate meaning with the data and to exploit
the
data through intelligent processing techniques. We refer to
assertional and intensional deﬁnitions provided by ontologies
as an ontological knowledge base. Currently, we can use data
mining techniques to exploit and extract hidden knowledge
patterns from ontological knowledge bases (KBs), even in
incomplete and noisy ontologies. These knowledge patterns
are used to enrich an ontology at both terminological (TBox)
and assertional (ABox) level. Level-wise generate-and-test
methods related to these data mining techniques were proposed
in the inductive logic programming (ILP) [2], [3] and a recent
approach that exploits the resoning capabilities of the SW,
like [4]. In addition, EDMAR [5], an evolutionary inductive
programming approach, was recently proposed to discover
hidden knowledge patterns in the form of multi-relational
association rules (ARs) coded in SWRL [6].

In this paper, we construct a method to change metrics
for scoring ARs into metrics for evaluating SWRL rules, with
the aim to increase the number of metrics to assess the SWRL

©2019 IEEE. This is the authors’ version of the work. It is posted here
for your personal use. Not for redistribution. The deﬁnitive Version of Record
was published in the Proceedings of RIVF 2019.

rules. New metrics will be used as ﬁtness function in EDMAR
and applied to three publicly available ontological KBs.

Basics and deﬁnitions are provided in Section II and III.
Section IV describes how to convert metrics and deﬁnes some
typical metrics. The EDMAR algorithm is shown in Section V.
Section VI reports on experiments to ﬁnd out the best metric.
Section VII concludes.

II. BASICS

We refer

to ontological KBs

in Description Logics
(DLs) [7], which are a family of formal knowledge represen-
tation languages and are the theoretical foundation of OWL1
(the standard representation language in the Semantic Web).
A DL KB K = (cid:104)T , A(cid:105) consisting of a TBox T containing
the terminological axioms and an ABox A containing the
assertional axioms. It should be recalled that DLs adopt the
open-world assumption (OWA - a statement may be true
irrespective of whether or not it is known to be true). For more
details concerning DLs see [7]. In the following, we address
the general deﬁnition of relational AR with respect to a given
ontological KB.

Deﬁnition 1 (Relational Association Rule). Given a populated
ontological KB K = (T , A), a relational association rule r for
K is a Horn-like clause of the form:
body → head, where
(a) body is a generalization of a set of assertions in K co-
occurring together; (b) head is a consequent that is induced
from K and body.

Deﬁnition 2 (Problem Deﬁnition). Given K = (T , A), a
minimum “frequency threshold”, θf , and a minimum “ﬁtness
threshold”, θﬁt, we desire to discover as many frequent and ﬁt
hidden patterns (w.r.t θf and θﬁt) as possible, in the form of
relational ARs, that may induce new assertions for K.

Intuitively, a frequent hidden pattern is a generalization
of a set of concept/role assertions co-occurring reasonably
often (w.r.t. a ﬁxed frequency threshold) together, showing an
underlying form of correlation that is exploited for obtaining
new assertions.

1https://www.w3.org/OWL/.

The rules to be discovered (following Def. 2), will be
represented in the Semantic Web Rule Language (SWRL) [6],
which extends the set of OWL axioms with Horn-like rules.2

transitively connected if there exist in r, atoms B2, . . . , Bk−1,
with k ≤ n, such that, for all i, j ∈ {1, . . . , k} with i (cid:54)= j,
T (Bi) ∩ T (Bj) (cid:54)= ∅.

Deﬁnition 3 (SWRL Rule). Given a KB K, a SWRL rule is
an implication between an antecedent (body) and a consequent
(head) of the form: B1 ∧ B2 ∧ . . . Bn → H1 ∧ · · · ∧ Hm, where
B1 ∧ · · · ∧ Bn is the rule body and H1 ∧ · · · ∧ Hm is the rule
head. Each B1, . . . , Bn, H1, . . . Hm is called an atom.

An atom is a unary or binary predicate of the form C(s),
R(s1, s2), where the predicate symbol C is a concept name
in K, R is a role name in K, s, s1, s2 are terms. A term is
either a variable (denoted by x, y, z) or a constant (denoted by
a, b, c) standing for an individual name or data value.

The discovered rules can be generally called multi-
relational rules since multiple binary predicates R(s1, s2) with
different role names of K could appear in a rule. The intended
meaning of a rule is: whenever the conditions in the antecedent
hold, the conditions in the consequent must also hold. A rule
having more than one atom in the head can be equivalently
transformed, due to the safety condition (see Def. 4), into
multiple rules, each one having the same body and a single
atom in the head. Therefore, we will consider, w.l.o.g., only
SWRL rules (hereafter just “rules”) with one atom in the head.

III. LANGUAGE BIAS

From Def. 3, we realize that we might generate a multitude
of SWRL rules with respect to a given ontological KB. In order
to avoid generating trivial rules (e.g., Male(x) → Man(x)),
redundant rules (e.g., fatherOf(y, x) → Male(y)) or meaning-
less rules (e.g., fatherOf(y, x) → parentOf(u, v)), we ﬁx the
language bias.

A language bias is a set of constraints giving a tight
speciﬁcation of the patterns worth considering, thus allowing
to reduce the search space. Following [5], we are interested
in rules having only atomic concepts and/or role names of K
as predicate symbols, and individual names as constants. Only
connected [8] and non-redundant [9] rules satisfying the safety
condition [6] are considered.

Given an atom A,

let T (A) denote the set of all

the
terms occurring in A and let V (A) ⊆ T (A) denote the set
of all the variables occurring in A e.g. V (C(x)) = {x} and
V (R(x, y)) = {x, y}. Such notation may be extended to rules
straightforwardly.

Deﬁnition 4 (Safety Condition). Given a KB K and a rule
r = B1 ∧ B2 ∧ . . . Bn → H, r satisﬁes the safety condition if
all variables appearing in the rule head also appear in the rule
body; formally if: V (H) ⊆ (cid:83)n
Deﬁnition 5 (Connected Rule). Given a KB K and a rule
r = B1 ∧ B2 ∧ . . . Bn → H, r is connected if and only if
every atom in r is transitively connected to every other atom
in r.

i=1 V (Bi),

Two atoms Bi and Bj

(cid:54)= j, are con-
nected if they share at
i.e.
if T (Bi) ∩ T (Bj) (cid:54)= ∅. Two atoms B1 and Bk in r are

least a variable or a constant

in r, with i

2The result is a KB with an enriched expressive power. More

complex relationships than subsumption can be expressed.

Deﬁnition 6 (Closed Rule). Given a KB K and a rule r =
B1 ∧B2 ∧. . . Bn → H, r is closed if and only if every variable
in r is closed.

Each variable vj ∈ (cid:83)n

i=1 V (Bi), j ∈ {1, . . . , k}, with k ≤

n, is closed if it appears at least twice in r.

Deﬁnition 7 (Redundant Rule). Given a KB K and a rule
r = B1 ∧ B2 ∧ . . . Bn → H, r is a redundant rule if at least
one atom in r is entailed by another atom in r with respect
to K, i.e., if, ∃i ∈ {0, 1, . . . , n}, ∃j ∈ {0, 1, . . . , n}, with
B0 = H, results: Bj |=K Bi, i (cid:54)= j

IV. METRICS FOR RULE EVALUATION

We notice that the generated rules satisfying the language
bias in Section III are deﬁnitely not trivial, redundant and
meaningless. However, the language bias might not guarantee
the quality of generated rules. Therefore, we use metrics that
are a data-driven approach for assessing the quality of rules.
For each metric, a threshold is used to ﬁlter low-quality rules.

So far, only a few metrics introduced in [8] and [5] are
used to evaluate the quality of SWRL rules. In this paper
we propose a solution that is using metrics employed for
evaluating the quality of ARs to assess the quality of SWRL
rules. With this solution, we might increase the number of
metrics to assess the SWRL rules and in addition also support
other studies related to the evaluation of SWRL rules.

A. Computing Metrics for Association Rules

All metrics used to evaluate ARs are computed based on

the frequency counts tabulated in Table I.

TABLE I.

A CONTINGENCY TABLE FOR THE ASSOCIATION RULE

X → Y

Y
X f11
X f01
f+1

Y
f10
f00
f+0

f1+
f0+
N

Table I includes two itemsets X, Y , where X is called
antecedent and Y is called consequent; X (resp. Y ) stands for
an itemset that does not contain items in the itemset X (Y ) for
a transaction; f11 is the number of times transactions contain
items in both X and Y ; f1+ counts the number of transactions
that contain items in X; f+1 counts the number of transactions
that contain items in Y ; N is the total number of transactions.
From the four values of f11, f1+, f+1 and N , we can calculate
the remaining values in the contingency table. For example, f10
is the number of transactions that contain items in X but not
in Y and f10 = f1+ − f11.

B. Computing Metrics for SWRL Rules

In order to build metrics for assessing SWRL rules derived
from metrics for evaluating ARs, we also need to build a
contingency table based on frequency counts. However, instead

TABLE II.

A CONTINGENCY TABLE FOR THE SWRL RULE B → H

H

B EH (r)
B

f01
ΣH (r)

H
f10 MH (r)
f00
f+0

f0+
N

of counting the number of transactions, we count the number
of bindings of variables to individuals in the KB.

The entries in Table II are used to aid in the construction
of the metrics for assessing SWRL rules. As in Table I, we
only need to obtain the four values EH (r), MH (r), ΣH (r)
and N , the remaining values being easy to compute based on
these values.

Deﬁnition 8 (Binding). A binding is a mapping from a set of
variables to a set of named individuals that occur in at least
one assertion in the ABox.

the classical ones (as given e.g. in [10]) to ensure they ﬁt the
case of SWRL rules.

Deﬁnition 9 (Rule Support). Given a rule r = B1 ∧ . . . ∧
Bn → H, its support is the number of distinct bindings of the
variables in the head, provided the body and the head of r are
satisﬁed jointly, formally:

supp(r) = |EH (r)|.

(1)

Deﬁnition 10 (Head Coverage for a Rule). Given the rule
r = B1 ∧ . . . ∧ Bn → H, its head coverage is the ration
between the rule support and the distinct variable bindings
from the head of the rule

headCoverage(r) =

|EH (r)|
|ΣH (r)|

.

(2)

Deﬁnition 11 (Rule Conﬁdence). Given a rule r = B1 ∧ . . . ∧
Bn → H, its conﬁdence is deﬁned as the ratio of the number
of the rule support and the number of bindings in the rule
body:

|EH (r)|
|MH (r)|

Given a rule r = B1 ∧ . . . ∧ Bn → H, let us denote:

conf(r) =

.

(3)

•

ΣH (r) the set of distinct bindings of the variables
occurring in the head of r, formally: ΣH (r) =
{binding V (H)}

Deﬁnition 12 (Rule PCA-Conﬁdence). Given the rule r =
B1 ∧ . . . ∧ Bn → H, its PCA (Partial Completeness Assump-
tion) conﬁdence is deﬁned as follows:

• EH (r) the set of distinct bindings of the variables
occurring in the head of r provided the body and the
head of r are satisﬁed, formally:
EH (r) = { binding f of V(H) | there is a binding f’
of V (B1 ∧ · · · ∧ Bn) that extends f, such that f (cid:48)(B1 ∧
· · · ∧ Bn ∧ H) is satisﬁed}.
Since the rules satisfy the safety condition, V (H) ⊆
V (B1 ∧ · · · ∧ Bn)

• MH (r) the set of distinct bindings of the variables
occurring in the head of r also appearing as binding
for the variables occurring in the body of r (since the
rules satisfy the safety condition), formally:
MH (r) = { binding f of V(H) | there is a binding f’
of V (B1 ∧ · · · ∧ Bn) that extends f, such that f (cid:48)(B1 ∧
· · · ∧ Bn) is satisﬁed}.

•

•

Σi total number of individuals inside a KB.

The rule head of r might be either a concept atom
or a role atom. Therefore, N is a number deﬁned as
follows:
N =

if H is a concept atom;
if H is a role atom;

= Σi(Σi − 1),

(cid:26) Σi,
P 2
Σi

This, implicitly, assumes a role cannot be reﬂexive.

pcaconf(r) =

(cid:40) |EH (r)|
|MH (r)| ,
|EH (r)|
|PH (r)| ,

if H is a concept atom;
if H is a role atom,

(4)

where PH (r) is the set of distinct bindings of the variables
occurring in the head of r provided that the body and the
head of r are satisﬁed. In particular, this applies when a role
atom is in the head of the considered rule. Formally: PH (r) =
{binding V (H) | ∃ binding V (B1 ∧ · · · ∧ Bn) ∪ vrng(H (cid:48)) :
B1 ∧ · · · ∧ Bn ∧ H (cid:48)}, where

• H and H (cid:48) are role atoms with the same predicate

symbol R;

•

•

•

V (H) ⊆ V (B1 ∧ · · · ∧ Bn) since rules are connected
and closed
vdom(H) = vdom(H (cid:48)) and vrng(H) (cid:54)= vrng(H (cid:48));
with vdom and vrng standing for the domain and range
variables respectively of the predicate symbol R
vrng(H (cid:48)) /∈ V (B1 ∧ · · · ∧ Bn).

Deﬁnition 13 (Certainty Factor for a Rule). Given a rule
r = B1 ∧ . . . ∧ Bn → H, its Certainty Factor [11] represents
uncertainty in the rule and is deﬁned as follows:

There are two kinds of metrics: symmetric and asymmetric
metrics. In our work, we focus only on introducing asymmetric
metrics that are suitable for assessing rules coded in SWRL,
because SWRL rules have the general form B → H and values
of an asymmetric metric for B → H and H → B may not be
the same. We do not use symmetric metrics because these are
only appropriate for evaluating itemsets of the form B ∧ H,
which is equivalent to H ∧ B, without any distinction between
antecedent and consequent.

Following [8], we redeﬁne a few basic deﬁnitions of
asymmetric metrics through the entries of Table II for use in
the experiments (Sec. VI). These deﬁnitions are modiﬁed from

cf(r) =





conf(r)− |ΣH (r)|
N
1− |ΣH (r)|
conf(r)− |ΣH (r)|
|ΣH (r)|
N

N

N

0,

,

,

if conf(r) > |ΣH (r)|

N

if conf(r) < |ΣH (r)|
if conf(r) = |ΣH (r)|

N

N

;

;

.

(5)

Deﬁnition 14 (Added Value for a Rule). Given a rule r =
B1 ∧. . .∧Bn → H, Added Value [12] for the rule r is deﬁned
as:

av(r) = conf(r) −

(6)

|ΣH (r)|
N

This metric is more meaningful when the amount of

evidence is large, for it relies on probabilities.

C. Metrics for Evaluating Rule Precision

Deﬁnition 15 (Rule Precision). Given the rule r = B1 ∧ . . . ∧
Bn → H, its precision is the ratio of the number of correct
predictions made by r and the total number of correct and
incorrect predictions (predictions logically contradicting K),
leaving out the predictions with unknown truth value.

This metric expresses the ability of a rule to perform correct
predictions, but it is not able to take into account the induced
knowledge, that is the unknown predictions. For this reason, the
metrics proposed in [13] are also considered (for the evaluation
in Sect. VI):

•

•

•

match rate: number of predicted assertions in agree-
ment with facts in the complete ontology, out of all
predictions;

commission error rate: number of predicted assertions
contradicting facts in the full ontology, out of all
predictions;

induction rate: number of predicted assertions that
are not known in the complete ontology, out of all
predictions.

V. THE EDMAR ALGORITHM

Here, we use the EDMAR (Evolutionary Discovery of
Multi-relational Association Rules) algorithm represented
in [5]. All the proposed metrics in this paper are in turn used
as ﬁtness function in EDMAR algorithm.

VI. EXPERIMENTS AND RESULTS

We carry out a comparison of the best asymmetric met-
rics [14] with a combination of them. The comparative criteria
are based on the number of discovered rules, the number of
unknown facts and the number of correct predictions. This
comparison is created with the desire to ﬁgure out a new metric
that is better than the metrics in [14]. The idea of this solution
is that the metric combined by the best metrics might obtain
discovered rules which satisﬁes at least one of the best metrics
but may not satisfy the remaining metrics.

The EDMAR algorithm is applied to the same publicly
available ontologies used in [15]: Financial,3 describing the
banking domain; Biological Pathways Exchange (BioPAX),4
describing biological pathway data; and New Testament Names
Ontology (NTNMerged),5 describing named entities in the
New Testament. Details in Table V.

In order to assess the ability of the discovered rules to
predict new assertional knowledge for a considered ontological
KB, for each ontology in Table V, we construct three stratiﬁed
samples by randomly removing respectively 20%, 30%, 40%
of the concept assertions and eliminating role assertions or
assertional axioms that involve the removed concept assertions,
while the full ontology has been used as a testbed.

We carried out 30 runs of the EDMAR algorithm (cf.
Sect. V) for each stratiﬁed sample and for each choice of
ﬁtness function using the following parameter setting:

3http://www.cs.put.poznan.pl/alawrynowicz/ﬁnancial.owl.
4http://www.biopax.org/release/biopax-level2.owl.
5http://www.semanticbible.com/ntn/ntn-view.html.

n = 5, 000;

MAX GENERATIONS = 200;
MAX RULE LENGTH = 10;

θﬁt = 0

pmut = 5%;
θmut = 0.2;
τ = 1
5
θf = 1.

Our experiments aimed at comparing the results obtained
by the EDMAR algorithm using the ﬁve best asymmetric
metrics evaluated by [14] (HeadCoverage, Conﬁdence, PCA-
Conﬁdence, Certainty Factor, Added Value) and the metric
Combinationmetrics(r) which is a combination of these ﬁve
metrics (Combinationmetrics(r) = HeadCoverage(r) + Conﬁ-
dence(r) + PCA-Conﬁdence(r) + Certainty Factor(r) + Added
Value(r)). These six metrics are used as ﬁtness function in
EDMAR algorithm and the comparison is based on the three
following criteria:

1)
2)

3)

The number of the rules discovered by the EA.
The induction rate: if it is positive, this means asser-
tions are predicted that could not be inferred from the
stratiﬁed version. The higher the induction rate, the
more novel predictions (unknown facts) are induced
for the KB.
The number of correct predictions = number of pre-
dictions × precision, where the number of predictions
is the number of predicted assertions and precision is
deﬁned in Def. 15.

In order to compare the metrics according to these criteria,
we applied the rules discovered from the stratiﬁed samples
to the full ontology versions and collected all predictions,
that
is the head atoms of the instantiated rules. All pre-
dictions already contained in the stratiﬁed ontology versions
have been discarded while the remaining predicted facts have
been considered. A prediction is regarded as correct if it is
contained/entailed by the full ontology version and as incorrect
if it is inconsistent with the full ontology version. Results in
Table IV have been averaged over 30 different runs with the
above parameter setting and have been measured in terms of
precision (Def. 15), match rate, commission error rate, and
induction rate (Sect. IV-C).

Table III shows a comparison of the metrics according to
the ﬁrst criterion. The second and third criteria are used to
compare the predictive power of the discovered rules and are
shown in Table IV. From the observations in Tables III and IV,
we might draw a few remarks:

•

•

The EDMAR algorithm conﬁrms its ability to discover
accurate rules (precision = match rate + commission
rate + induction rate = 1) and no contradicting
knowledge is predicted (commission error rate = 0)
on all versions of all considered ontologies.

The combined metric (CM) allows EDMAR to dis-
cover the largest number of rules (Tab. III) along with
the largest number of correct predictions (Tab. IV) in
NTNMerged that is the ontology containing the largest
number of individuals (see Table V). In addition, this
metric comes up with rules that induce a large number
of previously unknown facts (induction rate > 0).

We

may
Combinationmetrics(r)

see

that
of EDMAR outperforms

ﬁtness

the

function
each

ACKNOWLEDGMENT

We would like to thank Professor Marie-Laure Mugnier
at the University of Montpellier for her comments to make
the paper easier to understand. My sincere thanks also goes
to DNIIT (Danang International Institute of Technology) for
their precious support.

REFERENCES

[1] T. Berners-Lee, J. Hendler, and O. Lassila, “The semantic web,”

Scientiﬁc American, 2001.

[2] P. Reiser and P. Riddle, “Scaling up inductive logic programming: An
evolutionary wrapper approach,” Applied Intelligence, vol. 15, no. 3,
pp. 181–197, 2001.

[3] F. Divina, Hybrid Genetic Relational Search for Inductive Learning.

PhD thesis, Vrije Universiteit Amsterdam, 2004.

[4] C. d’Amato, S. Staab, A. Tettamanzi, D. M. Tran, and F. Gandon,
“Ontology enrichment by discovering multi-relational association rules
from ontological knowledge bases,” in Proc. of SAC 2016, ACM, 2016.
[5] D. M. Tran, C. d’Amato, B. T. Nguyen, and A. G. B. Tettamanzi, “An
evolutionary algorithm for discovering multi-relational association rules
in the semantic web,” in GECCO, pp. 513–520, ACM, 2017.
I. Horrocks, P. F. Patel-Schneider, H. Boley, S. Tabet, B. Grosof, and
M. Dean, “SWRL: A semantic web rule language combining OWL and
RuleML,” 2004.

[6]

[7] F. Baader, D. Calvanese, D. L. McGuinness, D. Nardi, and P. F. Patel-
Schneider, eds., The Description Logic Handbook: Theory, Implemen-
tation, and Applications, Cambridge Univ. Press, 2003.

[8] L. Gal´arraga, C. Teﬂioudi, K. Hose, and F. Suchanek, “AMIE: Associ-
ation rule mining under incomplete evidence in ontological knowledge
bases,” in WWW ’13, pp. 413–422, ACM, 2013.
J. J´ozefowska, A. Lawrynowicz, and T. Lukaszewski, “The role of
semantics in mining frequent patterns from knowledge bases in descrip-
tion logics with rules,” Theory and Practice of Logic Programming,
vol. 10, no. 3, pp. 251–289, 2010.

[9]

[10] R. Agrawal, T. Imielinski, and A. N. Swami, “Mining association rules
between sets of items in large databases,” in Proc. of the Int. Conf. on
Management of Data, pp. 207–216, ACM Press, 1993.

[11] L. M. Fu and E. H. Shortliffe, “The application of certainty factors
to neural computing for rule discovery,” in IEEE TRANS. On Neural
Networks, pp. 647–657, 2000.

[12] S. Sahar and Y. Mansour, “An empirical evaluation of objective interest-
ingness criteria,” in SPIE Conference on Data mining and Knowledge
Discovery, pp. 63–74, 1999.

[13] N. Fanizzi, C. d’Amato, and F. Esposito, “Learning with kernels in
description logics,” in ILP 2008 (F. Zelezn´y and N. Lavrac, eds.),
pp. 210–225, Springer, 2008.

[14] M. Duc Tran, C. d’Amato, B. T. Nguyen, and A. G. B. Tettamanzi,
“Comparing rule evaluation metrics for the evolutionary discovery of
multi-relational association rules in the semantic web,” in Genetic
Programming, (Cham), pp. 289–305, Springer International Publishing,
2018.

[15] C. d’Amato, A. G. B. Tettamanzi, and T. D. Minh, “Evolutionary
discovery of multi-relational association rules from ontological knowl-
edge bases,” in Knowledge Engineering and Knowledge Management,
(Cham), pp. 113–128, Springer International Publishing, 2016.

TABLE III.

COMPARISON OF THE METRICS BY THE NUMBER OF

DISCOVERED RULES.

HEADCOVERAGE (H), CONFIDENCE (C), PCA-CONFIDENCE (P),
CERTAINTY FACTOR(CF), ADDED VALUE(AV) AND COMBINATION OF
FIVE METRICS (CM)

Ont.

S.

%
0
l 2
a
i
c
n
a
n
i
F

%
0
3

%
0
2

%
0
4

H
26
± 4
25
± 3
23
± 3
129
± 13
128
± 9
129
%
0
± 11
4
% 1,157
0
2
% 1,052
0
3
% 1,088
0
4

%
0
3

x
a
p
o
i
B

d
e
g
r
e

M
N
T
N

Total number of discovered rules by metric ± stdev

C
25
± 4
25
± 4
23
± 3
122
± 12
130
± 13
136
± 11
1,345

P
25
± 3
25
± 4
22
± 4
130
± 10
130
± 9
133
± 8
1,418

CF
25
± 3
26
± 3
23
± 4
118
± 9
117
± 8
124
± 9
671

A
26
± 3
24
± 4
21
± 3
119
± 9
110
± 9
122
± 7
656

CM
25
± 4
26
± 5
22
± 4
119
± 8
117
± 8
126
± 7
2,118

± 168 ± 423 ± 492 ± 36 ± 34 ± 1,082

947

728
1,017
± 353 ± 238 ± 370 ± 45 ± 48
664
1,295
± 181 ± 177 ± 357 ± 38 ± 34

1,223

743

687

1,719
± 840
1,527
± 497

the ﬁve best metrics and is the best choice as an

of
optimization criterion (i.e., ﬁtness function) for EDMAR.

In addition, we also notice that

the rate of removing
concept assertions, does not affect the number of discovered
rules from ontological knowledge bases (Tab. III).

We also compared the experimental performance of the
EDMAR algorithm using Combinationmetrics(r) with the
two level-wise generate-and-test algorithms RARD [4] and
AMIE [8], which are closest to it in purpose. Table VI reports
the number of rules discovered by each system given each
knowledge base sample. We did not compare the second and
third criteria because the maximum length of a rule in EDMAR
is different from RARD and AMIE. We may remark the
following:

•

•

The metric Combinationmetrics(r) discovers more
rules than RARD from NTNMerged, but fewer from
the Financial and Biopax KBs. One reason is that
EDMAR does not generate open rules as RARD; in
addtion, the maximum length of a rule in EDMAR is
10 atoms while in RARD is 3 atoms. Another reason is
that the number of individuals in Financial and Biopax
is less than that of NTNMerged.

The metric Combinationmetrics(r) is superior to
AMIE because it discovers more rules than AMIE
from all three KBs, although the rules discovered by
AMIE can be inconsistent with KBs and the maximum
length of a rule in AMIE is 3 atoms.

VII. CONCLUSIONS

We have shown a method to convert metrics for scoring
ARs into metrics for assessing SWRL rules. In addition, we
ﬁgured out the best metric to score candidate multi-relational
association rules in the evolutionary approach by comparison
experiment.

Future work might focus on developing other metrics suited

for scenarios based on the OWA.

TABLE IV.

AVG (± ST.DEV.) PERFORMANCE ON EACH ONTOLOGY OF HEADCOVERAGE (H), CONFIDENCE (C), PCA-CONFIDENCE (P), CERTAINTY

FACTOR(CF), ADDED VALUE(AV) AND COMBINATION OF FIVE METRICS (CM)
precision = match rate + commission rate + induction rate

Ont.

Samp.

H

C

P

l
a
i
c
n
a
n
i
F

X
A
P
o
i
B

d
e
g
r
e

M
N
T
N

l
a
i
c
n
a
n
i
F

X
A
P
o
i
B

d
e
g
r
e

M
N
T
N

l
a
i
c
n
a
n
i

F

X
A
P
o
i
B

d
e
g
r
e

M
N
T
N

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

Match
Rate
0.855
± 0.033
0.864
± 0.044
0.861
± 0.044
0.567
± 0.031
0.591
± 0.03
0.58
± 0.027
0.572
± 0.026
0.564
± 0.039
0.621
± 0.027
0.848
± 0.045
0.860
± 0.038
0.858
± 0.051
0.574
± 0.036
0.584
± 0.027
0.582
± 0.023
0.618
± 0.042
0.581
± 0.036
0.670
± 0.030
0.859
± 0.055
0.850
± 0.055
0.859
± 0.043
0.571
± 0.028
0.584
± 0.023
0.587
± 0.027
0.609
± 0.046
0.588
± 0.043
0.670
± 0.042

Com.
Rate
0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0.436

0.379

0.152
± 0.045
0.140
± 0.038
0.142
± 0.051
0.426
± 0.036
0.416
± 0.027
0.418
± 0.023
0.382

Ind.
Rate
0.145
± 0.033
0.136
± 0.044
0.139
± 0.044
0.433
± 0.031
0.409
± 0.03
0.42
± 0.027
0.428

Total #
Predictions
47,232
± 36,777
25,456
± 34,174
23,207
± 30,133
84,035
± 15,018
85,499
± 11,660
90,856
± 14,048
2,311,624
± 0.026 ± 287,858
2,314,346
± 0.039 ± 458,522
2,345,588
± 0.027 ± 357,565
43,151
± 44,254
27,589
± 41,184
33,795
± 41,880
79,454
± 14,019
88,879
± 12,890
96,884
± 13,782
1,437,868
± 0.042 ± 253,206
1,164,306
± 0.036 ± 167,173
1,557,516
± 0.030 ± 280,666
41,350
± 46,196
32,812
± 41,501
29,762
± 35,582
89,486
± 11,303
92,392
± 13,878
91,849
± 11,960
2,130,947
± 0.046 ± 380,546
1,409,235
± 0.043 ± 286,439
1,727,343
± 0.042 ± 262,891

0.141
± 0.055
0.150
± 0.055
0.141
± 0.043
0.429
± 0.028
0.416
± 0.023
0.413
± 0.027
0.391

0.330

0.412

0.330

0.419

Ont.

Samp.

l
a
i
c
n
a
n
i
F

X
A
P
o
i
B

d
e
g
r
e

M
N
T
N

l
a
i
c
n
a
n
i
F

X
A
P
o
i
B

d
e
g
r
e

M
N
T
N

l
a
i
c
n
a
n
i

F

X
A
P
o
i
B

d
e
g
r
e

M
N
T
N

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

20%

30%

40%

Match
Rate
0.877
± 0.038
0.852
± 0.057
0.857
± 0.039
0.556
± 0.026
0.581
± 0.023
0.564
± 0.035
0.565
± 0.01
0.535
± 0.014
0.557
± 0.018
0.859
± 0.041
0.858
± 0.041
0.859
± 0.041
0.549
± 0.032
0.578
± 0.029
0.579
± 0.02
0.563
± 0.012
0.541
± 0.014
0.566
± 0.014
0.861
± 0.046
0.876
± 0.043
0.855
± 0.053
0.555
± 0.024
0.576
± 0.028
0.576
± 0.026
0.664
± 0.06
0.628
± 0.061
0.672
± 0.055

Com.
Rate
0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

CF

A

CM

0.465

0.443

0.141
± 0.041
0.142
± 0.041
0.141
± 0.041
0.451
± 0.032
0.422
± 0.029
0.421
± 0.02
0.437

Ind.
Rate
0.123
± 0.038
0.148
± 0.057
0.143
± 0.039
0.444
± 0.026
0.419
± 0.023
0.436
± 0.035
0.435

Total #
Predictions
31,656
± 45,045
48,568
± 45,051
31,068
± 36,044
80,361
± 8,700
78,933
± 11,147
84,476
± 12,647
1,039,112
± 0.01 ± 179,322
1,424,334
± 0.014 ± 180,205
2,110,928
± 0.018 ± 423,539
33,358
± 31,445
29,866
± 31,123
29,870
± 44,276
83,666
± 11,663
78,059
± 9,368
84,483
± 10,376
966,840
± 0.012 ± 204,430
1,324,518
± 0.014 ± 282,410
1,632,633
± 0.014 ± 218,033
37,766
± 44,986
28,245
± 33,875
38,415
± 42,710
82,398
± 11,717
83,524
± 13,986
90,496
± 12,094
3,254,323
± 0.06 ± 751,324
3,043,882
± 0.061 ± 627,598
3,404,974
± 0.055 ± 491,617

0.139
± 0.046
0.124
± 0.043
0.145
± 0.053
0.445
± 0.024
0.424
± 0.028
0.424
± 0.026
0.336

0.372

0.328

0.459

0.434

TABLE V.

KEY FACTS ABOUT THE ONTOLOGICAL KBS USED.

Ont.

# Con.

# Rol.

# Indiv.

Finan
Bio
NTM

59
40
47

16
33
27

1000
323
695

# Declared
Assertions
3359
904
4161

# Decl.+Derived
Assertions
3814
1671
6863

TABLE VI.

COMPARISON OF THE NUMBER OF DISCOVERED RULES.

Ontology

Samp.

Financial

Biopax

NTNMerged

20%
30%
40%
20%
30%
40%
20%
30%
40%

# The total number of rules discovered

CM
25 ± 4
26 ± 5
22 ± 4
119 ± 8
117 ± 8
126 ± 7
2,118 ± 1,082
1,719 ± 840
1,527 ± 497

RARD
177
181
180
298
283
272
243
225
239

AMIE
2
2
2
8
8
0
1,129
1,022
1,063

