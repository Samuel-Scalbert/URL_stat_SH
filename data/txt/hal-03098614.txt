On polynomial recursive sequences
Michaël Cadilhac, Filip Mazowiecki, Charles Paperman, Michal Pilipczuk,

Géraud Sénizergues

To cite this version:

Michaël Cadilhac, Filip Mazowiecki, Charles Paperman, Michal Pilipczuk, Géraud Sénizer-
ICALP 2020 - 47th International Colloquium
gues.
on Automata, Languages and Programming, Jul 2020, Saarbrücken / Virtual, Germany.
￿10.4230/LIPIcs.ICALP.2020.117￿. ￿hal-03098614￿

On polynomial recursive sequences.

HAL Id: hal-03098614

https://hal.science/hal-03098614

Submitted on 5 Jan 2021

HAL is a multi-disciplinary open access
archive for the deposit and dissemination of sci-
entific research documents, whether they are pub-
lished or not. The documents may come from
teaching and research institutions in France or
abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est
destinée au dépôt et à la diffusion de documents
scientifiques de niveau recherche, publiés ou non,
émanant des établissements d’enseignement et de
recherche français ou étrangers, des laboratoires
publics ou privés.

On Polynomial Recursive Sequences

Michaël Cadilhac
DePaul University, Chicago, IL, USA
michael@cadilhac.name

Filip Mazowiecki
Max Planck Institute for Software Systems, Saarland Informatics Campus, Saarbücken, Germany
ﬁlipm@mpi-sws.org

Charles Paperman
Université de Lille, Villeneuve d’Ascq, France
charles.paperman@univ-lille.fr

Michał Pilipczuk
University of Warsaw, Poland
michal.pilipczuk@mimuw.edu.pl

Géraud Sénizergues
Université de Bordeaux, France
geraud.senizergues@u-bordeaux.fr

Abstract

We study the expressive power of polynomial recursive sequences, a nonlinear extension of the
well-known class of linear recursive sequences. These sequences arise naturally in the study of
nonlinear extensions of weighted automata, where (non)expressiveness results translate to class
separations. A typical example of a polynomial recursive sequence is bn = n!. Our main result is
that the sequence un = nn is not polynomial recursive.

2012 ACM Subject Classiﬁcation Theory of computation → Models of computation

Keywords and phrases recursive sequences, expressive power, weighted automata, higher-order
pushdown automata

Digital Object Identiﬁer 10.4230/LIPIcs.ICALP.2020.117

Category Track B: Automata, Logic, Semantics, and Theory of Programming

Related Version https://arxiv.org/abs/2002.08630

Funding Michał Pilipczuk: This work is a part of project TOTAL that has received funding from
the European Research Council (ERC) under the European Union’s Horizon 2020 research and
innovation programme, grant agreement No. 677651.

Acknowledgements We thank Maria Donten-Bury for suggesting the proof of Theorem 11 presented
here. This proof replaced our previous more elaborate and less transparent argument. We also thank
James Worrell, David Purser and Markus Whiteland for helpful comments. The research for this
work was carried out in part at the Autobóz Research Camp in 2019 in Firbush, Scotland. Finally,
we thank the participants of the automata seminar at the University of Warsaw for an insightful
discussion on the class of rational recursive sequences (considered in Section 7).

1

Introduction

Sequences deﬁned recursively arise naturally in many areas, particularly in mathematics and
computer science. One of the most studied classes is that of linear recursive sequences. Such
sequences are deﬁned by ﬁxing the values of the ﬁrst k elements, while every subsequent

© Michaël Cadilhac, Filip Mazowiecki, Charles Paperman, Michał Pilipczuk, and
Géraud Sénizergues;
licensed under Creative Commons License CC-BY

47th International Colloquium on Automata, Languages, and Programming (ICALP 2020).
Editors: Artur Czumaj, Anuj Dawar, and Emanuela Merelli; Article No. 117; pp. 117:1–117:17

Leibniz International Proceedings in Informatics
Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl Publishing, Germany

EATCS117:2 On Polynomial Recursive Sequences

element can be obtained as a linear combination of the k elements preceding it. The most
famous example is the Fibonacci sequence, deﬁned by setting f0 = 0, f1 = 1, and the
recurrence relation fn+2 = fn+1 + fn.

It is well known that every linear recursive sequence can be deﬁned by a system of k
jointly recursive sequences, where for every sequence we ﬁx the initial value and provide
a recurrence relation expressing the (n + 1)st element as a linear combination of the nth
elements of all the sequences [15]. For example, to deﬁne the Fibonacci sequence fn in this
way, one needs one auxiliary sequence: we set f0 = 0, g0 = 1, and postulate

(

fn+1 = gn,
gn+1 = fn + gn.

(1)

In this paper we study polynomial recursive sequences over rational numbers that generalise
linear recursive sequences. They are deﬁned by systems of sequences like (1), but on the right
hand side we allow arbitrary polynomial expressions, rather than just linear combinations.
For example, the sequence bn = n! can be deﬁned in this way using one auxiliary sequence:
we may set b0 = c0 = 1 and write

(

bn+1 = bn · cn,
cn+1 = cn + 1.

(2)

Thus, the recurrence relation uses two polynomials: P1(x1, x2) = x1x2 and P2(x1, x2) = x2+1.
The two classes of linear and polynomial recursive sequences appear naturally in automata
theory, and in particular in connection with weighted automata and higher-order pushdown
automata. Weighted automata over the rational semiring are a quantitative variant of ﬁnite
automata that assign rational numbers to words [10]. In the special case of a 1-letter alphabet,
each word can be identiﬁed with its length. Then a weighted automaton deﬁnes a mapping
from natural numbers (possible lengths) to rationals, and this can be seen as a sequence. It
is known that sequences deﬁnable in this way by weighted automata are exactly the linear
recursive sequences [6]. Pushdown automata of order k can be used for deﬁning mappings
from words to words [21]; in particular, for k = 2 and 1-letter alphabets, such automata
compute exactly the linear recursive sequences of natural integers [11].

Thus, nonlinear extensions of linear recursive sequences may correspond to nonlinear

extensions of weighted automata. For the latter, consider three examples:

polynomial recurrent relations that generalise pushdown automata of order 3 [12, 21];
cost-register automata which arose as a variant of streaming transducers [3, 4];
polynomial automata, connected to reachability problems for vector addition systems [7].
Surprisingly, these three models, although introduced in diﬀerent contexts, are all equivalent.1
Moreover, over unary alphabets they deﬁne exactly polynomial recursive sequences, in the
same fashion as weighted automata (respectively order 2 pushdown automata) over unary
alphabets deﬁne linear recursive sequences.

The goal of this paper is to study the expressive power of polynomial recursive sequences.
Clearly, this expressive power extends that of linear recursive sequences: it is easy to see that
every linear recursive sequence has growth bounded by 2O(n), while already the sequence
bn = n! grows faster. In fact, already the recurrence relation a0 = 2, an+1 = (an)2 deﬁnes

1 This is a simple but technical observation as the three models are essentially syntactically equivalent.

Throughout the paper we will use the name cost-register automata to refer to all three models.

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:3

the sequence 22n
, whose growth is doubly-exponential. However, there are well-known integer
sequences related to these examples for which deﬁnability as a polynomial recursive sequence
seems much less clear. The ﬁrst example is the sequence un = nn. The second example
(cid:1). Note that by Stirling’s approximation,
is the sequence of Catalan numbers Cn = 1
n+1
nn is asymptotically very close to n!, while Cn is, up to factors polynomial in n, roughly
equal to 4n. For these reasons, simple asymptotic considerations cannot prove the sequences
un = nn and Cn to be not polynomial recursive. Recall that the Catalan numbers admit
multiple combinatorial interpretations, which can be used to derive the recurrence formulas
Cn+1 = Pn
i=0 CiCn−i and (n + 2)Cn+1 = (4n + 2)Cn. Note that these formulas are not
of the form of recurrence formulas considered in this work. Additionally, it is known that
Catalan numbers Cn are not linear recursive (see e.g. [8]), despite having growth 2O(n).

(cid:0)2n
n

Our results. We show that both the sequence of Catalan numbers Cn and the sequence
un = nn are not polynomial recursive. For this, we present two techniques for proving
that a sequence is not polynomial recursive. The ﬁrst technique for Catalan numbers is
number-theoretical: we show that a polynomial recursive sequence of integers is ultimately
periodic modulo any large enough prime. The second technique for nn is more algebraic
in nature: we show that for every polynomial recursive sequence there exists k ∈ N such
that every k consecutive elements of the sequence satisfy a nontrivial polynomial equation.
The fact that un = nn is not polynomial recursive is our main result. These inexpressibility
results were announced without proofs by the ﬁfth coauthor in an invited talk in 2007 [21].
The present paper contains proofs and extensions of these results.

Applications. The discussed models of cost-register automata [12, 4, 7] are not the only
nonlinear extensions of weighted automata that appear in the literature. We are aware of
at least two more extensions: weighted context-free grammars [5, 8] and weighted MSO
logic [9, 17]. As it happens, over the 1-letter alphabet, weighted context-free grammars can
deﬁne Catalan numbers, and weighted MSO logic can deﬁne nn. Therefore, as a corollary of
our results we show that functions expressible in pushdown-automata of level 4, weighted
context-free grammars and weighted MSO logic are not always expressible in the class of
cost-register automata.

The class of holonomic sequences is another extension of linear recursive sequences [16].
These sequences are deﬁned recursively with one sequence, but the coeﬃcients in the recursion
are polynomials of the element’s index. For example, bn = 1 and bn+1 = (n + 1)bn deﬁnes
bn = n!. The expressiveness of this class has also been studied and in particular the sequence
nn is known to be not in the class of holonomic sequences [14]. As a corollary of our results
one can show that there are no inclusions between the classes of holonomic sequences and
polynomial recursive sequences. On the one hand every holonomic sequence is asymptotically
bounded by 2p(n) for some polynomial p [16], and the sequence an = 22n
is polynomial
recursive. On the other hand, Catalan numbers admit a deﬁnition as a holonomic sequence:
C0 = 1 and (n + 2)Cn+1 = (4n + 2)Cn. In Section 7 we discuss the class of rational recurrence
sequences that generalises both holonomic and polynomial recursive sequences.

Organisation.
In Section 2 we give basic deﬁnitions and examples of linear and polynomial
recursive sequences. In Section 3 we show that the deﬁnition of polynomial recursive sequences
requires a system of sequences and, unlike linear recursive sequences, cannot be equivalently
deﬁned using only one sequence. Then in Sections 4 and 5 we show that the sequence of
Catalan numbers Cn and the sequence un = nn are not polynomial recursive. In Section 6
we explain in details our corollaries for weighted automata. We conclude in Section 7.

I C A L P 2 0 2 0

117:4 On Polynomial Recursive Sequences

2

Preliminaries

By N we denote the set of nonnegative integers. A sequence over a set D is a function
u : N → D; all the sequences considered in this work are over the ﬁeld of rationals Q. We use
the notation hunin∈N for elements of sequences, where un = u(n). Also, we use bold-face
letters as a short-hand for sequences, e.g., u = hunin∈N.

We now introduce the two main formalisms for describing sequences: linear recursive

sequences and polynomial recursive sequences.

Linear recursive sequences. A k-variate linear form (or linear form if k is irrelevant) over
Q is a function L : Qk → Q of the form

L(x1, . . . , xk) = a1x1 + . . . + akxk

for some a1, . . . , ak ∈ Q. A sequence of rationals u is a linear recursive sequence if there
exist k ∈ N and a k-variate linear form L such that u satisﬁes the recurrence relation

un+k = L(un, . . . , un+k−1)

for all n ∈ N.

(3)

Observe that such a sequence is uniquely determined by the form L and its ﬁrst k elements:
u0, . . . , uk−1 ∈ Q. The minimal k for which a description of u as in (3) can be given is called
the order of u. For example, Fibonacci numbers are uniquely deﬁned by the recurrence
relation fn+2 = fn+1 + fn and starting elements f0 = 0, f1 = 1. Note that this recurrence
relation corresponds to the linear form L(x1, x2) = x1 + x2.

We now present a second deﬁnition of linear recursive sequences which, as we will explain,
is equivalent to the ﬁrst deﬁnition. Suppose u1, u2, . . . , uk are sequences of rationals. We
say that these sequences satisfy a system of linear recurrence equations if there are k-variate
linear forms L1, . . . , Lk such that:





u1
n+1 = L1(u1
...
n+1 = Lk(u1
uk

n, . . . , uk

n),

n, . . . , uk

n).

(4)

for all n ∈ N. Note that such a system can be equivalently rewritten in the matrix form

~un+1 = M~un

where ~un = (u1
Lk(~x))T for all ~x ∈ Qk. Note that then ~un = M n~u0 for all n ∈ N.

n)T and M is the k × k matrix over Q such that M~x = (L1(~x), . . . ,

n, . . . , uk

It is well known that systems of linear recurrence equations can be equivalently used to

deﬁne linear recursive sequences, as explained in the following result.
(cid:73) Proposition 1 ([15]). A sequence u is a linear recursive sequence if and only if there exists
k ∈ N and sequences u1, . . . , uk that satisfy a system of linear recurrence equations, where
u1 = u. Moreover, the smallest k for which this holds is the order of u.

To get more accustomed with this equivalent deﬁnition, let us consider the sequence
an = n2. Since (n + 1)2 = n2 + 2n + 1, we consider two auxiliary sequences bn = n and
cn = 1. The initial values of these sequences are a0 = b0 = 0 and c0 = 1. Thus, an can be
deﬁned by providing these initial values together with a system of linear equations






an+1 = an + 2bn + cn,
bn+1 = bn + cn,
cn+1 = cn.

(5)

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:5

In the matrix form, we could equivalently write that (an, bn, cn)T = M n~e, where

M =





1 2
0 1
0 0


1
 , ~e =
1
1






0
 .
0
1

It can be readily veriﬁed that an is also deﬁned by the recurrence an+3 = 3an+2 − 3an+1 + an.
The diﬀerence between the two deﬁnitions is that in (3) we have only one sequence,
but the depth of the recursion can be any k. Conversely, in (4) we are allowed to have k
sequences, but the depth of recursion is 1. The equivalence provided by Proposition 1 is
quite convenient and is often used in the literature, see e.g. [20].

We give a short proof of Proposition 1, diﬀerent from the proof in [15]. The reason is

that this proof provides us with intuition that will turn out to be useful later on.

Proof of Proposition 1. For the left-to-right implication, suppose u is a linear recursive
sequence of order k; say it is deﬁned by the recursive formula un+k = L(un, . . . , un+k−1),
where L is a k-variate linear form. Deﬁne the sequences u1, . . . , uk by setting

ui
n := un+i−1

for all i ∈ {1, . . . , k} and n ∈ N.

Then u1 = u and the sequences u1, . . . , uk satisfy the system of equations as in (4), where
Lk = L and Li(x1, . . . , xk) = xi+1 for i ∈ {1, . . . , k − 1}.

For the right-to-left implication, suppose that there exist k ∈ N and sequences u1, . . . , uk
that satisfy the system of equations (4) for some linear forms L1, . . . , Lk, such that u = u1.
Let M be a k ×k matrix over Q that encodes the linear forms L1, . . . , Lk; that is, ~un = M n~u0,
where ~un = (u1

n)T ∈ Qk. Consider the linear map R : Qk → Qk+1 deﬁned as

n, . . . , uk

R(~x) = ( ~eM 0~x , ~eM 1~x , . . . , ~eM k~x )T,

where ~e = (1, 0, . . . , 0) ∈ Qk. Note that

R(~un) = (u1

n, u1

n+1, . . . , u1

n+k) = (un, un+1, . . . , un+k)

for all n ∈ N.

(6)

Observe that R is a linear map from Qk to Qk+1, hence the image of R is a linear subspace
of Qk+1 of co-dimension at least 1. Hence, there exists a nonzero linear form K : Qk+1 → Q
such that im R ⊆ ker K, or equivalently K(R(~x)) = 0 for all ~x ∈ Qk. By (6), we have

K(un, un+1, . . . , un+k) = 0
Let a0, a1, . . . , ak ∈ Q be such that

for all n ∈ N.

K(x0, . . . , xk) = a0x0 + . . . + akxk.

(7)

Since K is nonzero there exists the largest index t such that at 6= 0. From (7) we infer that

un+t = −

a0
at
so u is a linear recursive sequence of order at most t.

· un+t−2 − . . . −

· un+t−1 −

at−1
at

at−2
at

· un

for all n ∈ N,

(cid:74)

(cid:73) Remark 2. One could imagine setting up all the deﬁnitions presented above using aﬃne
forms instead of linear forms, that is, functions A : Qk → Q of the form

A(x1, . . . , xk) = a1x1 + . . . + akx2 + c,

where a1, . . . , ak, c ∈ Q. However, as we may always add constant sequences to the system
of recurrence equations deﬁning a sequence, considering aﬃne forms does not increase the
expressive power. In fact, from Proposition 1 it can be easily derived that we obtain exactly
the same class of linear recursive sequences, regardless of whether we use linear or aﬃne
forms in both deﬁnitions.

I C A L P 2 0 2 0

117:6 On Polynomial Recursive Sequences

Poly-recursive sequences. We now generalise the concept of linear recursive sequences
by allowing polynomial functions instead of only linear forms. The starting point of the
generalisation is the deﬁnition via a system of recurrence equations, as in (4).

(cid:73) Deﬁnition 3. A sequence of rationals u is polynomial recursive (or poly-recursive for short)
if there exist k ∈ N, sequences of rationals u1, . . . , uk satisfying u = u1, and polynomials
P1, . . . , Pk ∈ Q[x1, . . . , xk] such that for all n ∈ N, we have






u1
n+1 = P1(u1
...
n+1 = Pk(u1
uk

n, . . . , uk

n),

n, . . . , uk

n).

(8)

Again, notice that polynomials P1, . . . , Pk and the initial values u1
the sequences u1, . . . , uk, hence in particular the sequence u = u1.

0, . . . uk

0 uniquely determine

Let us examine a few examples. First, recall the sequences an = 22n

in Section 1. Another example is the sequence dn = 2n2
d0 = e0 = 1 and let

. Since 2(n+1)2

and bn = n! deﬁned
= 2n2+2n+1, we deﬁne

(

dn+1 = dn · (en)2 · 2,
en+1 = en · 2.

The polynomials used in the last deﬁnition are P1(x1, x2) = 2x1(x2)2 and P2(x1, x2) = 2x2.
Notice that this idea can be easily generalised to deﬁne any sequence of the form rQ(n), where
r is a rational number and Q is a polynomial with rational coeﬃcients. We remark that all
three sequences an = 22n
are not linear recursive for simple asymptotic
reasons (from the discussion in Section 1).

, bn = n!, dn = 2n2

3

Simple poly-recursive sequences

The following notion is a natural generalisation of the deﬁnition (3) of linear recursive
sequences to the setting of recurrences deﬁned using polynomials.

(cid:73) Deﬁnition 4. A sequence of rationals u is simple poly-recursive if there exists k ∈ N and
a polynomial P ∈ Q[x1, x2, . . . , xk] such that

un+k = P (un, un+1, . . . , un+k−1)

for all n ∈ N.

(9)

Again, note that if u is simple poly-recursive as above, then the polynomial P and the

ﬁrst k values u0, . . . , uk−1 uniquely determine the sequence u.

Clearly, every linear recursive sequence is a simple poly-recursive sequence.

In fact,
by Proposition 1 and Remark 2, the two notions would coincide if we required that the
polynomial P in the deﬁnition above has degree at most 1. On the other hand, observe that
the same construction as in the ﬁrst paragraph of the proof of Proposition 1 shows that every
simple poly-recursive sequence is poly-recursive. We now prove that this inclusion is strict.

(cid:73) Theorem 5. The sequence bn = n! is not simple poly-recursive.

Proof. Towards a contradiction, suppose there is k ∈ N and a polynomial P ∈ Q[x1, . . . , xk]
such that

bn+k = P (bn, bn+1, . . . , bn+k−1)

for all n ∈ N.

(10)

Let us write

P = Q + A,

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:7

where Q, A ∈ Q[x1, . . . , xk] are such that A is the sum of all the monomials in the expansion
of P that have degree at most 1, while Q is the sum of all the remaining monomials in the
expansion of P . Thus, A is an aﬃne form, while every monomial in the expansion of Q has
total degree at least 2.

Since A is an aﬃne form, there exists a number c ∈ N such that

|A(q1, . . . , qk)| < c + c · max
1(cid:54)i(cid:54)k

|qi|

for all q1, . . . , qk ∈ Q.

Thus, for all n > 2c we have

|A(bn, bn+1, . . . , bn+k−1)| (cid:54) c + c · (n + k − 1)! < (n + k)! = bn+k.

(11)

Since by (10) it follows that

Q(bn, bn+1, . . . , bn+k−1) = bn+k − A(bn, bn+1, . . . , bn+k−1),

using (11) we may conclude that for all n > 2c the following inequality holds:

0 < Q(bn, bn+1, . . . , bn+k−1) < 2bn+k.

(12)

Let m be the product of all denominators of all the coeﬃcients appearing in the expansion
of P into a sum of monomials. Note that for all n > m, the number ˜bn := bn
m is an
integer. Furthermore, we have that ˜bn divides ˜bn0 for all n0 (cid:62) n. Since every monomial in
the expansion of Q has total degree at least 2, we infer that for all n > m, we have

m = n!

(cid:1)2

(cid:0)˜bn

| Q(bn, bn+1, . . . , bn+k−1).

(13)

By combining (13) with the left inequality of (12), we conclude that for all n > max(2c, m),

Q(bn, bn+1, . . . , bn+k−1) (cid:62) (cid:0)˜bn

(cid:1)2

.

This bound together with the right inequality of (12) implies that

(cid:19)2

(cid:18) n!
m

= (cid:0)˜bn

(cid:1)2

< 2bn+k = 2 · (n + k)!.

This inequality, however, is not true for every suﬃciently large n, a contradiction.

(cid:74)

4 Modular periodicity

Recall that a sequence of numbers r is ultimately periodic if there exist N, k ∈ N such that
for all n (cid:62) N , we have rn = rn+k. In this section we prove the following periodicity property
of poly-recursive sequences, which, by means of contradiction, provides a basic technique for
proving that a given sequence is not poly-recursive.

(cid:73) Theorem 6. Suppose u is a poly-recursive sequence of integers. Then there exists a ∈ N
such that for every prime p > a, the sequence rn := un mod p is ultimately periodic.

Proof. Let u be deﬁned by the system of recursive equations


n+1 = P1(u1
u1

...

n+1 = Pk(u1
uk

n, . . . , uk

n),

n, . . . , uk

n),

where u1, . . . , uk are sequences such that u1 = u and P1, . . . , Pk ∈ Q[x1, . . . , xk].

(14)

I C A L P 2 0 2 0

117:8 On Polynomial Recursive Sequences

Without loss of generality we may assume that the initial values u1

0 are integers.
Indeed, this is certainly the case for u1
0 = u0, while for every i > 1, we may rewrite the
system so that it uses the sequence eui = qi · ui instead of ui, where qi is the denominator of
ui
0. For this, the starting condition for eui can be set as eui
0, which is an integer, in
all polynomials P1, . . . , Pk we may substitute xi with xi/qi, and the polynomial Pi can be
replaced with qi · Pi.

0 = qi · ui

0, . . . , uk

Further, without loss of generality we may assume that all the monomials present
in the expansions of all the polynomials P1, . . . , Pk have the same total degree d > 1.
Such polynomials are called homogeneous of degree d and they have the property that
Pi(ax1, . . . , axk) = adPi(x1, . . . , xk) for all a ∈ Q. Indeed, let d > 1 be any integer that is
not smaller than the degrees of all the polynomials P1, . . . , Pk. To the system (14) we add a
new sequence uk+1, deﬁned by setting

uk+1
0 = 1

and

n+1 = (cid:0)uk+1
uk+1

n

(cid:1)d

for n ∈ N.

Thus uk+1 is constantly equal to 1. Then each monomial M (x1, . . . , xk) appearing in
the expansion of any of the polynomials Pi(x1, . . . , xk) can be replaced by the monomial
k+1 ∈ Q[x1, . . . , xk, xk+1], where t is the total degree of M . It is straight-
M (x1, . . . , xk) · xd−t
forward to see that the modiﬁed system of recursive equations still deﬁnes u = u1, while all
monomials appearing in all the polynomials used in it have the same degree d.

After establishing these two assumptions, we proceed to the main proof. Let a ∈ N be a

positive integer such that the polynomials

˜Pi := a · Pi

all belong to Z[x1, . . . , xk], that is, have integer coeﬃcients. For instance, one can take a to
be product of all the denominators of all the rational coeﬃcients appearing in the polynomials
P1, . . . , Pk. For all i ∈ {1, . . . , k} and n ∈ N, let us deﬁne

˜ui
n := a

dn−1
d−1 · ui
n.

By a straightforward induction we show that the sequences ˜u1, . . . , ˜uk satisfy the system of
recursive equations


n+1 = ˜P1(˜u1
˜u1

...

n+1 = ˜Pk(˜u1
˜uk

n, . . . , ˜uk

n),

n, . . . , ˜uk

n).

(15)

Indeed, the induction base is trivial and for the induction step recall that all monomials have
the same degree d, hence

˜Pi(˜u1

n, . . . , ˜uk

n) = a·Pi(a

dn−1
d−1 ·u1

n, . . . , a

dn−1
d−1 ·uk

n) = a·a

dn+1−d
d−1

·ui

n+1 = a

dn+1−1
d−1

·ui

n+1 = ˜ui

n+1.

Observe that since the initial values ˜ui
0 = ui
coeﬃcients, we can infer that all entries of the sequences ˜u1, . . . , ˜uk are integers.

0 are integers, and the polynomials ˜Pi have integer

We now show that for every prime p > a, the sequence r deﬁned as rn = un mod p is

ultimately periodic; this will conclude the proof. For every i ∈ {1, . . . , k} and n ∈ N, let

n := ˜ui
˜ri

n mod p.

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:9

By (15) and the fact that the polynomials ˜Pi have integer coeﬃcients, for every n ∈ N the
vector of entries (˜r1
n). Since
this vector may take only at most pk diﬀerent values, it follows that the sequences ˜r1, . . . , ˜rk
are ultimately periodic.

n+1) is uniquely determined by the vector (˜r1

n+1, . . . , ˜rk

n, . . . , ˜rk

Now note that for every n ∈ N, we have

dn−1
d−1 · rn ≡ a

a

dn−1
d−1 · un = ˜u1

n ≡ ˜r1

n mod p.

Since p > a and p is a prime, we have that a and p are coprime. Therefore, there exists an
dn−1
d−1 , we have
integer b such that ab ≡ 1 mod p. By multiplying the above congruence by b

rn ≡ b

dn−1
d−1 · ˜r1

n mod p.

(16)

satisﬁes the recursive equation bn+1 = b · (bn)d,
Observe that the sequence bn = b
hence the sequence (bn mod p) is ultimately periodic. Since ˜r1 is ultimately periodic as well,
(cid:74)
from (16) we conclude that the sequence r is ultimately periodic.

dn−1
d−1

We use Theorem 6 to prove that the Catalan numbers are not poly-recursive. Recall that

the nth Catalan number Cn is given by the formula Cn = 1
n+1

(cid:0)2n
n

(cid:1).

Alter and Kubota [2] studied the behaviour of the Catalan numbers modulo primes. It is
easy to see (and proved in [2]) that for every prime p, the sequence Cn contains inﬁnitely
many numbers divisible by p, and inﬁnitely many numbers not divisible by p. Let a p-block
be a maximal contiguous subsequence of the sequence Cn consisting of entries divisible by p.
The p-blocks can be naturally ordered along the sequence Cn, so let Lp
k be the length of the
kth p-block. Then Alter and Kubota proved the following.

(cid:73) Theorem 7 ([2]). For every prime p > 3 and k (cid:62) 1, we have

Lp

k =

pm+1 − 3
2

,

where m is the largest integer such that (cid:0) p+1

2

(cid:1)m

divides k.

Note that Theorem 7 in particular implies that for every prime p > 3, the sequence Cn
contains arbitrary long p-blocks. This means that Cn taken modulo p cannot be ultimately
periodic. By combining this with Theorem 6, we conclude the following.

(cid:73) Corollary 8. Catalan numbers are not poly-recursive.

5

Cancelling polynomials

Consider the following deﬁnition, which can be seen as a variation of the deﬁnition of simple
poly-recursive sequences, which we discussed in Section 3.

(cid:73) Deﬁnition 9. A sequence of rationals u admits a cancelling polynomial if there exist k ∈ N
and a nonzero polynomial P ∈ Q[x0, . . . , xk] such that

P (un, un+1, . . . , un+k) = 0

for all n ∈ N.

(cid:73) Remark 10. A cancelling polynomial P can be always assumed to have integer coeﬃcients,
i.e. to belong to Z[x0, . . . , xk], because one may multiply P by the product of all denominators
that occur in its coeﬃcients.

I C A L P 2 0 2 0

117:10 On Polynomial Recursive Sequences

Observe that the notion of a cancelling polynomial extends the deﬁnition of simple
poly-recursive sequences (Deﬁnition 4) in the following sense: a sequence is simple poly-
recursive if and only if it admits a cancelling polynomial P (x0, . . . , xk) whose expansion into
a sum of monomials involves only one term containing xk, namely the monomial xk itself.
This particular form of the considered algebraic constraint was vitally used in the proof of
Proposition 5, where we showed that the sequence bn = n! is not simple poly-recursive. In
fact, if one drops this restriction, then it is easy to see that the sequence bn = n! actually
admits a cancelling polynomial: for instance P (x0, x1, x2) = x0x2 − (x1)2 − x0x1.

We now prove that the above example is not a coincidence.

(cid:73) Theorem 11. Every poly-recursive sequence admits a cancelling polynomial.

Proof. The proof follows the same basic idea as the proof of Proposition 1 that we gave
in Section 2. The diﬀerence is that instead of linear maps we work with maps deﬁned by
polynomial functions, hence instead of linear independence we shall work with the notion of
algebraic independence.

Recall that if K ⊆ L is a ﬁeld extension, then elements a1, . . . , ak ∈ L are algebraically
dependent over K if there is a nonzero polynomial P ∈ K[x1, . . . , xk] such that P (a1, . . . , ak) =
0 in L. We will use the following well-known fact; see e.g. [18, Chapter VIII, Theorem 1.1].

(cid:66) Claim 12.
every k + 1 elements are algebraically dependent over K.

If K is a ﬁeld and k ∈ N, then in the ﬁeld of rational expressions K(x1, . . . , xk)

We proceed to the proof of the theorem. Let u be the poly-recursive sequence in
question. By deﬁnition, for some k ∈ N there are sequences u1, . . . , uk and polynomials
P1, . . . , Pk ∈ Q[x1, . . . , xk] such that for all n ∈ N,






u1
n+1 = P1(u1
...
uk
n+1 = Pk(u1

n, . . . , uk

n),

n, . . . , uk

n).

We inductively deﬁne polynomials P (t)

1 , . . . , P (t)

k ∈ Q[x1, . . . , xk] as follows. For t = 0, set

P (0)
i

(x1, . . . , xk) = xi

for all i ∈ {1, . . . , k},

and for t (cid:62) 1, set

P (t)
i

(x1, . . . , xk) = Pi(P (t−1)

1

(x1, . . . , xk), . . . , P (t−1)

k

(x1, . . . , xk))

for all i ∈ {1, . . . , k}.

The following claim follows from the construction by a straightforward induction.

(cid:66) Claim 13. For all n, t ∈ N and i ∈ {1, . . . , k}, we have P (t)

i

Consider the polynomials

P (0)
1

, P (1)
1

, . . . , P (k)

1 ∈ Q[x1, . . . , xk].

(u1

n, . . . , uk

n) = ui

n+t.

By Claim 12, these polynomials (treated as elements of Q(x1, . . . , xk)) are algebraically
dependent over Q, so there exists a nonzero polynomial Q ∈ Q[y0, y1, . . . , yk] such that the
polynomial

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:11

R(x1, . . . , xk) = Q(P (0)

1

(x1, . . . , xk), P (1)

1

(x1, . . . , xk), . . . , P (k)

1

(x1, . . . , xk))

is identically zero. It now remains to observe that by Claim 13, for every n ∈ N we have

0 = R(u1

n, . . . , uk

n) = Q(u1

n, u1

n+1, . . . , u1

n+k) = Q(un, un+1, . . . , un+k),

hence Q is a cancelling polynomial for u.

(cid:74)

(cid:73) Remark 14. Notice that a given polynomial can be the cancelling polynomial of many
diﬀerent sequences. For example, the polynomial (x0)2 − 1 is a cancelling polynomial of any
sequence over {−1, 1}. In particular, some of those sequences are not ultimately periodic
modulo p, for any prime numbers p, and thus are not poly-recursive by Theorem 6. Hence,
the converse direction of Theorem 11 does not hold.

We now present an application of Theorem 11 by showing that the sequence un = nn is not
poly-recursive. By Theorem 11, it suﬃces to show that there is no cancelling polynomial for
this sequence. Contrary to the reasoning presented in Section 4, where we used oﬀ-the-shelf
results about modular (non)periodicity of Catalan numbers, proving the nonexistence of a
cancelling polynomial for the nn sequence turns out to be a somewhat challenging task.

We ﬁrst observe that when we apply a multivariate polynomial to consecutive entries of

un, we can rewrite the result in another form:

(cid:73) Lemma 15. Let Z ∈ Z[x0, x1, . . . , xk] be a nonzero polynomial. Then there exist nonzero
polynomials P1, . . . , Pm, Q1, . . . , Qm ∈ Z[x] such that the polynomials P1, . . . , Pm are pairwise
diﬀerent and for every n ∈ N,

Z (cid:0)nn, (n + 1)n+1, . . . , (n + k)n+k(cid:1) =

m
X

i=1

Pi(n)n · Qi(n).

Proof. By expanding Z as a sum of monomials, we may write

Z(x0, . . . , xk) =

m
X

i=1

ci · Mi(x0, . . . , xj),

where for all i ∈ {1, . . . , m}, ci 6= 0 and

Mi(x0, . . . , xk) =

k
Y

j=0

xdi,j
j

are pairwise diﬀerent monomials. Now observe that for every n ∈ N, we have

(cid:0)nn, (n + 1)n+1, . . . , (n + k)n+k(cid:1) =

Mi

k
Y

(n + j)di,j ·(n+j)

(17)

j=0


k
Y

=



Hence, if we deﬁne

j=0



n

(n + j)di,j



·

k
Y

j=0

(n + j)di,j ·j.

(18)

Pi(x) =

k
Y

j=0

(x + j)di,j

and

Qi(x) = ci ·

k
Y

j=0

(x + j)di,j ·j,

I C A L P 2 0 2 0

117:12 On Polynomial Recursive Sequences

then, by (17) and (18), we conclude that

Z (cid:0)nn, (n + 1)n+1, . . . , (n + k)n+k(cid:1) =

m
X

i=1

Pi(n)n · Qi(n)

for all n ∈ N,

as required. It now suﬃces to observe that (1) all polynomials Pi and Qi are nonzero, because
ci 6= 0 and the monomial Mi is nonzero, and (2) the polynomials Pi are pairwise diﬀerent,
(cid:74)
because they have pairwise diﬀerent multisets of roots.

With Lemma 15 established, we move to the main result of this section.

(cid:73) Theorem 16. The sequence un = nn is not poly-recursive.

Proof. Suppose, for the sake of contradiction, that the sequence un = nn is poly-recursive. By
Theorem 11 and Remark 10, there exists a nonzero polynomial Z ∈ Z[x0, x1, . . . , xk] that is
cancelling for un. By Lemma 15, we can ﬁnd nonzero polynomials P1, . . . , Pm, Q1, . . . , Qm ∈
Z[x], where P1, . . . , Pm are pairwise diﬀerent, such that

m
X

i=1

Pi(n)n · Qi(n) = 0

for all n ∈ N.

(19)

This system of equations seems somewhat unwieldy due to the presence of the term Pi(n)n,
where n is involved both in the base and in the exponent. The following claim formulates the
key idea of the proof: if we consider the equations (19) modulo any prime, then the bases
and the exponents of these terms can be made independent.

(cid:66) Claim 17. For every prime p and all a, b ∈ Z where b > 0, it holds that

m
X

i=1

Pi(a)b · Qi(a) ≡ 0 mod p .

Proof. Since p and p − 1 are coprime, there is an n ∈ N such that n > b, n ≡ a mod p and
n ≡ b mod p − 1. Thus for any 1 (cid:54) i (cid:54) m:

Qi(n) ≡ Qi(a) mod p

and

Pi(n)n ≡ Pi(a)n ≡ Pi(a)b mod p ,

the second part holding by Fermat’s Little Theorem. The claim now follows by considering
(cid:67)
equality (19) modulo p.

Let a ∈ N and let Da = [dij]1(cid:54)i,j(cid:54)m be the m × m matrix deﬁned by dij = Pj(a)i.
Since this is essentially a Vandermonde matrix, its determinant has a simple expression, as
expressed in the following claim.

(cid:66) Claim 18. Let S ∈ Z[x] be deﬁned as

S(x) =

m
Y

i=1

Pi(x) ·

Y

1(cid:54)i<j(cid:54)m

(Pi(x) − Pj(x)) .

Then S is nonzero and det(Da) = S(a).

Proof. That S is nonzero follows from the fact that the polynomials Pi are all nonzero and
pairwise diﬀerent.

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:13

Now observe that Da is a Vandermonde matrix with columns consisting of consecutive
powers of Pj(a), for 1 (cid:54) j (cid:54) m with columns consisting of consecutive powers of Pj(a),
starting with Pj(a)1 (whereas the Vandermonde matrix starts with Pj(a)0). It is well known
that the determinant of the Vandermonde matrix [Pj(a)i−1]1(cid:54)i,j(cid:54)m is

Y

1(cid:54)i<j(cid:54)m

(Pi(a) − Pj(a)) .

Further, multiplying the jth column by Pj(a), for all j, results in the determinant being
multiplied by Qm
(cid:67)

i=1 Pi(a). This proves the claim.

We will need the following classical deﬁnition.

(cid:73) Deﬁnition 19. Let R be a ring and M be a m × m matrix over R. The adjugate matrix
cM of M is an m × m matrix over R that satisﬁes cM M = det(M ) · I, where I is the m × m
identity matrix.

It is well known that the adjugate matrix always exists. Now let ua = (Q1(a), . . . , Qm(a))T.
Claim 17 implies that for every prime p,

Daua ≡ ~0 mod p,

where ~0 is the m-dimensional zero vector. By multiplying both sides of this equation by the
adjugate matrix of Da taken over Zp, we conclude that for every prime p, we have

det(Da) · ua ≡ ~0 mod p

for all a ∈ N.

This is equivalent to

S(a) · Qi(a) ≡ 0 mod p

for all a ∈ N and 1 (cid:54) i (cid:54) m.

(20)

This means that for every prime p and every 1 (cid:54) i (cid:54) m, the following assertion holds: every
a ∈ Fp is a zero of the polynomial S · Qi considered as a polynomial over Fp.

Recall that the polynomials S, Q1, . . . , Qm ∈ Z[x] are nonzero. Consider a prime p that
is larger than every coeﬃcient occurring in the expansion of the polynomials S, Q1, . . . , Qm
into sums of monomials, and that is further larger than deg(S) + maxj∈{1,...,m} deg(Qj).
Then the polynomials S, Q1, . . . , Qm are nonzero even when regarded as polynomials over Fp,
hence the same can be said also about the polynomials S · Qi, for all 1 (cid:54) i (cid:54) m. However,
by (20), for every 1 (cid:54) i (cid:54) m the polynomial S · Qi has at least p > deg(S) + deg(Qi) roots
(cid:74)
over Fp. This is a contradiction.

6

Applications in weighted automata

In this section we discuss the implications of the results we presented in the previous sections
for various questions regarding the expressive power of extensions of weighted automata. We
will brieﬂy describe the model of weighted automata and focus only on its expressive power.
We refer an interested reader to e.g. [1, 10] for an introduction to the area.

Given a semiring S, a weighted automaton A is a tuple (d, Σ, {Ma}a∈Σ, I, F ), where:
d ∈ N is the dimension;
Σ is a ﬁnite alphabet;
every Ma is a d × d matrix over S; and
I and F are the initial and the ﬁnal vector in Sd, respectively.

I C A L P 2 0 2 0

117:14 On Polynomial Recursive Sequences

In this paper we only consider the semiring S = Q. A weighted automaton deﬁnes a function
A
(cid:75)
(cid:74)

: Σ∗ → S as follows: if w = a1 . . . an ∈ Σ∗, then

(21)

(w) = I T · Ma1Ma2 . . . Man · F.

A
(cid:75)

(cid:74)

Note that when |Σ| = 1, this deﬁnition coincides with (the matrix form of) the deﬁnition (4)
of linear recursive sequences. Assuming |Σ| = 1, one can identify each word with its length,
: N → S. Therefore, weighted
which means that a weighted automaton deﬁnes a sequence
automata recognise exactly linear recursive sequences. See [6] for a broader discussion of the
connection between linear recursive sequences and weighted automata.

A
(cid:75)

(cid:74)

We now discuss three nonlinear extensions of weighted automata that can be found in the
literature. These extensions are studied in diﬀerent areas and, as far as we are aware, they
have never been compared in terms of expressive power before. We show that the results
we presented in Sections 4 and 5 can be used to prove separation results, in terms of the
expressive power, for some of these classes.

Like in the case of weighted automata, any automaton within the considered classes
deﬁnes a function f : Σ∗ → Q, where Σ is the working alphabet. For our purposes, we restrict
attention to the case of unary alphabets, that is, |Σ| = 1. Thus, the three considered classes
of extended weighted automata correspond to three separate classes of sequences f : N → Q,
similarly as standard weighted automata correspond to the class of linear recursive sequences.

Cost-register automata (CRA). Cost-register automata (CRA) were introduced in at least
three contexts [21, 4, 7]. To avoid technical details, we simply observe that CRAs over unary
alphabets recognize exactly poly-recursive sequences, as deﬁned in Deﬁnition 3. Since [21, 4, 7]
discuss several variants of CRAs, to avoid ambiguity we refer to the deﬁnition of a CRA that
can be found in [19]2.

Weighted context-free grammars (WCFG). Weighted automata can be equivalently de-
ﬁned as an extension of ﬁnite automata, where each translation is labelled by an element of
the semiring S (see e.g. [1]). In short, each run is assigned a value: the semiring product of
the labels of all the transitions used in the run. Given a word w, the automaton outputs the
semiring sum of the values assigned to all runs accepting w.

Weighted context-free grammars are an extension of context-free grammars in the same
way weighted automata are an extension of ﬁnite automata. Every grammar rule is assigned
a label from S. Then every derivation tree is assigned the semiring product of the labels of
all the rules used in the tree. The output for a word w is deﬁned as the semiring sum of all
values assigned to derivation trees of w. See e.g. [13] for more details. Here we present only
one example from [13] over the semiring Q.

Consider the grammar with one nonterminal X (which is also the starting nonterminal)
and one terminal a with the following rules: X → a, X → XX. Both rules are assigned
weight 1. Therefore, for every word an the output is the number of derivation trees. It is
easy to see that if we denote the output on the word an by Dn, then Dn is the number of
full binary trees with n leaves, which is the sequence of Catalan numbers shifted by one,
i.e. D0 = 0 and Dn+1 = Cn. By Corollary 8 and since it is easy to see that poly-recursive
sequences are closed under shifts, we conclude the following.

(cid:73) Corollary 20. The class of sequences deﬁnable by unary-alphabet WCFGs over Q is not
contained in the class of sequences recognizable by unary-alphabet CRAs over Q.

2 The equivalence of CRAs and poly-recursive sequences over a unary alphabet is basically a syntactic
translation, if one assumes that CRAs have only one state. Proving that every CRA can be deﬁned by
a one state CRA is a simple encoding of states into the registers.

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:15

Weighted MSO (WMSO). Weighted MSO logic [9, 17] was introduced as a logic involving
weights that intended to capture the expressive power of weighted automata, similarly as
ﬁnite automata are characterized by MSO. In general, WMSO turns out to be strictly more
expressive than weighted automata. We will not deﬁne the whole syntax of WMSO, only a
simple fragment that does not even use variables. See [9, 17] for the full deﬁnition.

Fix the semiring S = Q. Similarly as for weighted automata, every WMSO formula ϕ
: Σ∗ → Q. As for atomic formulas, every c ∈ Q is an atomic
over Q deﬁnes a function
formula that deﬁnes the constant function
(w) = c. Instead of the boolean connectives
c
(cid:75)
∨ and ∧, WMSO formulas can be added using + and multiplied using ·, with the obvious
semantics. Instead of having the existential quantiﬁer ∃x and the universal quantiﬁer ∀x, we
have the sum quantiﬁer P

x and the product quantiﬁer Q

x. Then

ϕ
(cid:74)

(cid:74)

(cid:75)

(cid:116)X

(cid:124)

ϕ

(w) =

x

n
X
i=1 (cid:74)

ϕ[x → ai]

(w)

(cid:75)

for all w = a1 . . . an ∈ Σ∗,

and similarly for

Q

x ϕ

(cid:74)

(cid:75)

(w). For example,

P
(cid:74)

x 1
(cid:75)

(an) = n. It follows that

(cid:116)Y

X

(cid:124)
1

(an) = nn.

x

y

This proves that the sequence nn can be deﬁned in unary-alphabet WMSO over Q, so by
Theorem 16 we may conclude the following.

(cid:73) Corollary 21. The class of sequences deﬁnable in unary-alphabet WMSO over Q is not
contained in the class of sequences recognizable by unary-alphabet CRAs over Q.

7

Conclusion

We proved that two sequences, the Catalan numbers Cn and un = nn, are not polynomial
recursive. For this, we exhibited two properties that poly-recursive sequences always satisfy:
ultimate periodicity modulo large prime numbers and admitting a cancelling polynomial.

Going further than poly-recursive sequences, one can consider the class of rational recursive
sequences. These are speciﬁed like polynomial recursive sequences (Deﬁnition 3) but on the
right hand side of the system of equations (8) we allow the Pi’s to be taken from the ﬁeld of
fractions of the polynomial ring. That is, each Pi is of the form Pi(x1, . . . , xk) = Qi(x1,...,xk)
Ri(x1,...,xk) ,
where Qi, Ri ∈ Q[x1, . . . , xk] and Ri 6= 0.

This class extends both poly-recursive sequences and holonomic sequences (see Section 1).
For example one can express the sequence of Catalan numbers, since Cn+1 = 4n+2
n+2 · Cn and
an ancillary sequence can hold the value n. On the other hand, the proof of the existence of
cancelling polynomials for poly-recursive sequences (Theorem 11) carries over to rational
recursive sequences. In particular, un = nn is not even rational recursive.

This discussion points to the notion of rational recursive sequences as a natural object

for future research.

I C A L P 2 0 2 0

117:16 On Polynomial Recursive Sequences

References

1

Shaull Almagor, Udi Boker, and Orna Kupferman. What’s decidable about weighted automata?
In Automated Technology for Veriﬁcation and Analysis, 9th International Symposium, ATVA
2011, Taipei, Taiwan, October 11-14, 2011. Proceedings, pages 482–491, 2011. doi:10.1007/
978-3-642-24372-1_37.

2 Ronald Alter and K. K. Kubota. Prime and prime power divisibility of Catalan numbers.
Journal of Combinatorial Theory, Series A, 15(3):243–256, 1973. doi:10.1016/0097-3165(73)
90072-1.

3 Rajeev Alur and Pavol Cerný. Expressiveness of streaming string transducers. In IARCS
Annual Conference on Foundations of Software Technology and Theoretical Computer Science,
FSTTCS 2010, December 15-18, 2010, Chennai, India, pages 1–12, 2010. doi:10.4230/
LIPIcs.FSTTCS.2010.1.

4 Rajeev Alur, Loris D’Antoni, Jyotirmoy V. Deshmukh, Mukund Raghothaman, and Yifei
Yuan. Regular functions and cost register automata. In 28th Annual ACM/IEEE Symposium
on Logic in Computer Science, LICS 2013, New Orleans, LA, USA, June 25-28, 2013, pages
13–22, 2013. doi:10.1109/LICS.2013.65.
James K Baker. Trainable grammars for speech recognition. The Journal of the Acoustical
Society of America, 65(S1):S132–S132, 1979.

5

6 Corentin Barloy, Nathanaël Fijalkow, Nathan Lhote, and Filip Mazowiecki. A robust class of
linear recurrence sequences. In 28th EACSL Annual Conference on Computer Science Logic,
CSL 2020, January 13-16, 2020, Barcelona, Spain, pages 9:1–9:16, 2020. doi:10.4230/LIPIcs.
CSL.2020.9.

7 Michael Benedikt, Timothy Duﬀ, Aditya Sharad, and James Worrell. Polynomial automata:
Zeroness and applications. In 32nd Annual ACM/IEEE Symposium on Logic in Computer
Science, LICS 2017, Reykjavik, Iceland, June 20-23, 2017, pages 1–12, 2017. doi:10.1109/
LICS.2017.8005101.

8 Vijay Bhattiprolu, Spencer Gordon, and Mahesh Viswanathan. Extending Parikh’s theorem to
weighted and probabilistic context-free grammars. In Quantitative Evaluation of Systems - 14th
International Conference, QEST 2017, Berlin, Germany, September 5-7, 2017, Proceedings,
pages 3–19, 2017. doi:10.1007/978-3-319-66335-7_1.

9 Manfred Droste and Paul Gastin. Weighted automata and weighted logics. Theor. Comput.

Sci., 380(1-2):69–86, 2007. doi:10.1016/j.tcs.2007.02.055.

10 Manfred Droste, Werner Kuich, and Heiko Vogler. Handbook of Weighted Automata. Springer,

1st edition, 2009.

11

12

13

14

Julien Ferté, Nathalie Marin, and Géraud Sénizergues. Word-mappings of level 2. Theory
Comput. Syst., 54(1):111–148, 2014. doi:10.1007/s00224-013-9489-5.
S. Fratani and Géraud Sénizergues. Iterated pushdown automata and sequences of rational
numbers. Ann. Pure Appl. Logic, 141(3):363–411, 2006. doi:10.1016/j.apal.2005.12.004.
Pierre Ganty and Elena Gutiérrez. The Parikh property for weighted context-free grammars.
In 38th IARCS Annual Conference on Foundations of Software Technology and Theoretical
Computer Science, FSTTCS 2018, December 11-13, 2018, Ahmedabad, India, pages 32:1–32:20,
2018. doi:10.4230/LIPIcs.FSTTCS.2018.32.
Stefan Gerhold. On some non-holonomic sequences. Electr. J. Comb., 11(1), 2004. URL:
http://www.combinatorics.org/Volume_11/Abstracts/v11i1r87.html.

15 Vesa Halava, Tero Harju, Mika Hirvensalo, and Juhani Karhumäki. Skolem’s problem-on the
border between decidability and undecidability. Technical report, Technical Report 683, Turku
Centre for Computer Science, 2005.

16 Manuel Kauers and Peter Paule. The Concrete Tetrahedron - Symbolic Sums, Recurrence
Equations, Generating Functions, Asymptotic Estimates. Texts & Monographs in Symbolic
Computation. Springer, 2011. doi:10.1007/978-3-7091-0445-3.

M. Cadilhac, F. Mazowiecki, C. Paperman, M. Pilipczuk, and G. Sénizergues

117:17

17

18
19

20

Stephan Kreutzer and Cristian Riveros. Quantitative monadic second-order logic. In 28th
Annual ACM/IEEE Symposium on Logic in Computer Science, LICS 2013, New Orleans, LA,
USA, June 25-28, 2013, pages 113–122, 2013. doi:10.1109/LICS.2013.16.
Serge Lang. Algebra. Graduate Texts in Mathematics. Springer, 2002.
Filip Mazowiecki and Cristian Riveros. Copyless cost-register automata: Structure, expres-
siveness, and closure properties. J. Comput. Syst. Sci., 100:1–29, 2019. doi:10.1016/j.jcss.
2018.07.002.
Joël Ouaknine and James Worrell. On linear recurrence sequences and loop termination.
SIGLOG News, 2(2):4–13, 2015. URL: https://dl.acm.org/citation.cfm?id=2766191.

21 Géraud Sénizergues. Sequences of level 1, 2, 3, ..., k , .

In Computer Science - Theory
and Applications, Second International Symposium on Computer Science in Russia, CSR
2007, Ekaterinburg, Russia, September 3-7, 2007, Proceedings, pages 24–32, 2007. doi:
10.1007/978-3-540-74510-5_6.

I C A L P 2 0 2 0

