Análise de Desempenho da Distribuição de Workflows
Científicos em Nuvens com Restrições de
Confidencialidade
Rodrigo A. P. Silva, Esther Pacitti, Yuri Y. Frota, Daniel de Oliveira

To cite this version:

Rodrigo A. P. Silva, Esther Pacitti, Yuri Y. Frota, Daniel de Oliveira. Análise de Desempenho da
Distribuição de Workflows Científicos em Nuvens com Restrições de Confidencialidade. WPerformance
2021 - 20th Workshop on Performance of Computer and Communication Systems, CSBC, Jul 2021,
Online, Brazil. pp.37-48, ￿10.5753/wperformance.2021.15721￿. ￿lirmm-03452298￿

HAL Id: lirmm-03452298

https://hal-lirmm.ccsd.cnrs.fr/lirmm-03452298

Submitted on 26 Nov 2021

HAL is a multi-disciplinary open access
archive for the deposit and dissemination of sci-
entific research documents, whether they are pub-
lished or not. The documents may come from
teaching and research institutions in France or
abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est
destinée au dépôt et à la diffusion de documents
scientifiques de niveau recherche, publiés ou non,
émanant des établissements d’enseignement et de
recherche français ou étrangers, des laboratoires
publics ou privés.

An´alise de Desempenho da Distribuic¸ ˜ao de Workﬂows
Cient´ıﬁcos em Nuvens com Restric¸ ˜oes de Conﬁdencialidade*

Rodrigo A. P. Silva1, Esther Pacitti2, Yuri Frota1, Daniel de Oliveira1

1Universidade Federal Fluminense (UFF)

{rprado, yuri, danielcmo}@ic.uff.br

2INRIA,University of Montpellier, CNRS, LIRMM, Franc¸a

Esther.Pacitti@inria.fr

Abstract. Clouds provide an on-demand environment that allows scientists to mi-
grate their local experiments to an elastic environment. Experiments are modeled
as scientiﬁc workﬂows, and many of them are computing and data-intensive. The
storage of these data is a concern, as conﬁdentiality can be compromised. Mali-
cious users may infer knowledge of the results and structure of workﬂows. Data
dispersion and encryption can be adopted to increase conﬁdentiality, but these
mechanisms cannot be adopted uncoupled from workﬂow scheduling, at the risk
of increasing execution time and ﬁnancial costs. In this paper, we present SaFER
(workﬂow Scheduling with conFidEntity pRoblem), a scheduling approach that
considers data conﬁdentiality constraints.

Resumo. As nuvens fornecem um ambiente sob demanda que permite que cien-
tistas migrem seus experimentos locais para um ambiente el´astico. Os experi-
mentos s˜ao modelados como workﬂows cient´ıﬁcos, e muito deles s˜ao intensivos
em computac¸ ˜ao e produc¸ ˜ao de dados. O armazenamento desses dados preocupa,
uma vez que a conﬁdencialidade pode ser comprometida. Usu´arios maliciosos po-
dem inferir conhecimento dos resultados e da estrutura dos workﬂows. Dispers˜ao
dos dados e criptograﬁa podem ser adotados para aumentar a conﬁdencialidade,
mas esses mecanismos n˜ao pode ser adotados de forma desacoplada ao escalo-
namento do workﬂow, sob o risco de aumentar o tempo de execuc¸ ˜ao e despesas.
Nesse artigo, apresentamos a SaFER (workﬂow Scheduling with conFidEntiality
pRoblem), uma abordagem de escalonamento que considera restric¸ ˜oes de conﬁ-
dencialidade dos dados.

1. Introduc¸ ˜ao

Os workﬂows cient´ıﬁcos (doravante denominados apenas como workﬂows) s˜ao um
arcabouc¸o para modelar as etapas de uma simulac¸ ˜ao cient´ıﬁca [de Oliveira et al. 2019]. Es-
sas etapas envolvem a execuc¸ ˜ao de m´ultiplas aplicac¸ ˜oes com parˆametros de entrada e de
sa´ıda. Os workﬂows s˜ao modelados como grafos dirigidos, nos quais os n´os representam
as atividades (i.e., associadas `a um programa, script, etc.) e os arcos representam as de-
pendˆencias de dados entre as atividades [Deelman et al. 2015]. Denominamos ativac¸ ˜ao
a execuc¸ ˜ao de uma atividade que consome um dado espec´ıﬁco (de entrada ou produzido
pelo pr´oprio workﬂow). Esses workﬂows geralmente s˜ao modelados e executados usando
mecanismos complexos chamados de Sistemas de Gerˆencia de Workﬂows (SGWfs). Os

*Os autores agradecem ao CNPq, CAPES a FAPERJ por ﬁnanciarem parcialmente esse trabalho.

SGWfs apoiam a composic¸ ˜ao, a execuc¸ ˜ao, o monitoramento e a captura de dados de pro-
veniˆencia [Freire et al. 2008] (hist´orico de execuc¸ ˜oes para ﬁns de reprodutibilidade) dos
workﬂows. Em muitos dom´ınios da ciˆencia, como a biologia, a qu´ımica e a astronomia
[de Oliveira et al. 2019] ´e comum que um mesmo workﬂow seja executado m´ultiplas vezes
at´e que o cientista possa conﬁrmar ou refutar uma hip´otese. Essas m´ultiplas execuc¸ ˜oes, ali-
adas ao grande volume de dados a ser processado, requerem ambientes de processamento
de alto desempenho ou de processamento escal´avel em uso de dados, como clusters de
m´aquinas commodity e supercomputadores, para que os workﬂows produzam resultados em
tempo h´abil [Deelman et al. 2015].

Muitos cientistas migraram seus workﬂows para nuvens [Gonz´alez et al. 2009], uma
vez que as nuvens de computadores oferecem uma ampla variedade de recursos sob de-
manda, desde m´aquinas virtuais (VMs), ´areas de armazenamento, etc. Al´em disso, as nu-
vens oferecem elasticidade, o que pode ser valioso para a execuc¸ ˜ao de workﬂows em larga
escala. Muitos SGWfs permitem a execuc¸ ˜ao de workﬂows em nuvens como o Pegasus
[Deelman et al. 2015] e o SciCumulus [de Oliveira et al. 2010]. Para permitir a execuc¸ ˜ao
dos workﬂows de forma otimizada, cada ativac¸ ˜ao necessita ser escalonada para uma VM.
Logo, o problema de escalonamento se torna decidir em qual VM executar cada uma das
ativac¸ ˜oes do workﬂow. O escalonamento de ativac¸ ˜oes de workﬂows ´e um conhecido pro-
blema NP-Dif´ıcil. Os SGWfs j´a oferecem uma s´erie de algoritmos de escalonamento que
exploram caracter´ısticas das nuvens. Ao executar workﬂows na nuvem, os SGWfs existen-
tes comumente se baseiam em ´areas de armazenamento compartilhado para gravar os dados
produzidos (e.g., chamaremos essas ´areas de buckets), e.g., o Pegasus provˆe mecanismos
para armazenar dados no Amazon S3. Da mesma forma, o SciCumulus usa o s3fs3 (sis-
tema de arquivos compartilhado sobre o S3) para armazenamento e recuperac¸ ˜ao de dados.
Embora a utilizac¸ ˜ao de servic¸os de armazenamento na nuvem facilite a gerˆencia dos dados
produzidos e consumidos de um workﬂow, a conﬁdencialidade dos resultados ´e ainda uma
quest˜ao aberta [Ennajjar et al. 2017]. Nos ´ultimos anos, muitos cientistas evitaram migrar
seus experimentos para a nuvem por quest˜oes de conﬁdencialidade. Os arquivos produzidos
e consumidos por um workﬂow podem conter dados conﬁdenciais, e, se os mesmos forem
armazenados em conjunto e um usu´ario malicioso tiver acesso ao bucket, o mesmo pode
inferir seus resultados, o que n˜ao ´e desej´avel.

Para ilustrar esse problema, consideremos um fragmento do workﬂow Montage
[Deelman et al. 2015], apresentado na Figura 1. O Montage cria uma imagem em mo-
saico a partir de m´ultiplas imagens astronˆomicas menores. Apesar do Montage possuir
10 atividades, na Figura 1, apresentamos somente duas (mProjectPP, em azul, e mDiff-
Fit, em amarelo). Cada atividade possuem ativac¸ ˜oes associadas, cada uma consumindo
arquivos de entrada diferentes. Por exemplo, trˆes ativac¸ ˜oes de mProjectPP s˜ao apresen-
tadas na Figura 1 (ID00000, ID00001 e ID00002), cada uma consumindo arquivos de
entrada diferentes (somente region.hdr ´e consumido pelas trˆes ativac¸ ˜oes). Os arquivos
p2mass-atlas-ID00000s-jID00000 area.ﬁts e p2mass-atlas-ID00000s-jID00000.ﬁts s˜ao ge-
rados pela ativac¸ ˜ao ID00000 (da atividade mProjectPP), que por sua vez consome os ar-
quivos region.hdr e 2mass-atlas-ID00000s-jID00000.ﬁts. Caso os dois arquivos produzidos
sejam armazenados em conjunto com os arquivos de entrada, um usu´ario malicioso pode
inferir que tipo de transformac¸ ˜ao foi aplicada nos dados. Logo, p2mass-atlas-ID00000s-
jID00000 area.ﬁts e p2mass-atlas-ID00000s-jID00000.ﬁts n˜ao devem ser armazenados em
conjunto. Al´em disso, n˜ao devem ser armazenados em conjunto com os arquivos re-
gion.hdr e 2mass-atlas-ID00000s-jID00000.ﬁts. Entretanto, nem todos os arquivos possuem

restric¸ ˜oes de armazenamento entre si. Por exemplo, os arquivos p2mass-atlas-ID00000s-
jID00000 area.ﬁts e p2mass-atlas-ID00000s-jID00000.ﬁts podem ser armazenado em con-
junto com o arquivo p2mass-atlas-ID00000s-jID00001 area.ﬁts, pois n˜ao foram gerados
pela mesma ativac¸ ˜ao, e nem a partir dos mesmos arquivos de entrada. Essa deﬁnic¸ ˜ao de
quais arquivos ser˜ao armazenados em conjunto em um bucket se d´a o nome de plano de dis-
pers˜ao. De fato, a dispers˜ao ´e uma das principais t´ecnicas para garantir conﬁdencialidade
de dados em nuvens [Branco-Jr. et al. 2016]. As restric¸ ˜oes de armazenamento necess´arias
para gerar um plano de dispers˜ao podem ser representadas como um grafo de conﬂito (Fi-
gura 1(`a direita)), onde cada arco ligando dois arquivos representa um conﬂito (i.e., esses
dois arquivos n˜ao devem ser armazenados no mesmo bucket).

Figura 1. Montage (esquerda) e exemplo de grafo de conﬂitos do Montage (direita).

Um bom plano de dispers˜ao de dados deve considerar conﬂitos entre os arquivos e a
capacidades/custo de armazenamento nos buckets. Abordagens existentes j´a tratam do pro-
blema de dispers˜ao de dados para garantir a conﬁdencialidade [Guerine et al. 2019]. Por´em,
tais abordagens dispersam os dados desacoplados do escalonamento das ativac¸ ˜oes do work-
ﬂow na nuvem. Essa dispers˜ao sem considerar a VM que a ativac¸ ˜ao que consumir´a os
dados ir´a executar, pode inserir um overhead de transferˆencia desnecess´ario, e.g., um ar-
quivo pode ser armazenado em um bucket da Amazon S3 em S˜ao Paulo e a ativac¸ ˜ao que
o consome executar no Jap˜ao. Logo, o plano de dispers˜ao dos dados integrado ao escalo-
namento das ativac¸ ˜oes ´e fundamental. Al´em disso, [Branco-Jr. et al. 2016] mencionam que
a criptograﬁa nas VMs aumenta o n´ıvel de seguranc¸a nos dados, e devem ser consideradas
complementarmente ao plano de dispers˜ao.

Nesse artigo, de forma a garantir a conﬁdencialidade dos dados produzidos e ao
mesmo tempo reduzir o tempo total e o custo de execuc¸ ˜ao do workﬂow, propomos uma
abordagem denominada SaFER (workﬂow Scheduling with conFidEntiality pRoblem) para
escalonamento de workﬂows, que leva em considerac¸ ˜ao a variedade e a heterogeneidade
de VMs na nuvem (por exemplo, diferentes larguras de banda, taxas de transferˆencia e ca-
pacidades de processamento), os mecanismos de seguranc¸a oferecidos por cada VM (e.g.,
criptograﬁa) e o grafo de conﬂito entre os arquivos, todos integrados. Assim, o escalonador
do SGWf deﬁne a distribuic¸ ˜ao de ativac¸ ˜oes nas VMs e o plano de dispers˜ao dos arquivos
entre os m´ultiplos buckets minimizando o tempo total de execuc¸ ˜ao e a chance de um usu´ario
malicioso acessar os dados e inferir o resultado do experimento. As contribuic¸ ˜oes do pre-
sente artigo s˜ao: (i) a formulac¸ ˜ao do problema SaFER como um problema de programac¸ ˜ao
matem´atica mista, (ii) a deﬁnic¸ ˜ao de um algoritmo de escalonamento de workﬂows com
restric¸ ˜oes de conﬁdencialidade, e (iii) uma avaliac¸ ˜ao experimental da abordagem proposta

usando benchmarks tradicionais da ´area de workﬂows cient´ıﬁcos. Esse artigo est´a organi-
zado em cinco sec¸ ˜oes al´em desta introduc¸ ˜ao. Na Sec¸ ˜ao 2 apresentamos os trabalhos relaci-
onados. Na Sec¸ ˜ao 3 ´e apresentada a formulac¸ ˜ao matem´atica, e na Sec¸ ˜ao 4 a heur´ıstica de
escalonamento proposta. Na Sec¸ ˜ao 5, discutimos a avaliac¸ ˜ao experimental, e na Sec¸ ˜ao 6
conclu´ımos o presente artigo.

2. Trabalhos Relacionados

O escalonamento de ativac¸ ˜oes de workﬂows em nuvem ´e um t´opico amplamente dis-
cutido na literatura. Existem diversas abordagens de escalonamento que consideram
tempo de transferˆencia, custo ﬁnanceiro, reduc¸ ˜ao de makespan, etc.
[Liu et al. 2015].
Entretanto, poucas abordagens focam no escalonamento de workﬂows considerando
quest˜oes de conﬁdencialidade e/ou seguranc¸a [Sujana et al. 2019, Abazari et al. 2019,
Tawfeek and AbdulHamed 2018, Shishido et al. 2018, Guerine et al. 2019]. A abordagem
OPTIC [Guerine et al. 2019] prop˜oe uma heur´ıstica para dispers˜ao de dados produzidos por
workﬂows em buckets de provedores de nuvem. Apesar de representar um avanc¸o no que
tange quest˜oes de conﬁdencialidade de dados, a OPTIC n˜ao considera o escalonamento
do workﬂow para planejar a dispers˜ao dos dados, i.e., um dado pode ser armazenado em um
bucket geograﬁcamente distante da VM em que ser´a processado. Isso pode ser um problema
tanto em termos de makespan (j´a que o tempo de transferˆencia ser´a impactado) quanto em
termos ﬁnanceiros (custos de transferˆencia e pagamento do tempo em que a VM se mant´em
inativa aguardando a transferˆencia dos dados.

Por outro lado, existem trabalhos que prop˜oem algoritmos de escalonamento de
workﬂows que consideram quest˜oes de seguranc¸a no processo.
[Shishido et al. 2018]
prop˜oem uma abordagem de escalonamento de workﬂows em nuvem que considera
i.e., o al-
restric¸ ˜oes de n´ıveis de seguranc¸a para as VMs envolvidas na execuc¸ ˜ao,
goritmo s´o executa determinadas ativac¸ ˜oes em VMs que oferecem os requisitos de
seguranc¸a necess´arios. Apesar de ser um avanc¸o [Shishido et al. 2018] n˜ao consideram
quest˜oes de dispers˜ao de dados, i.e., o requisito de seguranc¸a ´e considerado no pro-
cessamento da ativac¸ ˜ao, mas n˜ao onde os dados s˜ao armazenados. De forma similar,
[Tawfeek and AbdulHamed 2018] resolve o problema de escalonamento de workﬂows em
nuvem por meio de um algoritmo gen´etico que considera as restric¸ ˜oes de seguranc¸a, prazo e
custo. Assim como o trabalho de [Shishido et al. 2018], as restric¸ ˜oes de seguranc¸a n˜ao con-
sideram quest˜oes de armazenamento de dados. [Sujana et al. 2019] e [Abazari et al. 2019]
prop˜oem abordagens de escalonamento multi-crit´erio que consideram as demandas de
seguranc¸a das ativac¸ ˜oes e as interac¸ ˜oes na distribuic¸ ˜ao de ativac¸ ˜oes seguras na nuvem. De
maneira complementar, o i-OBJECT ´e uma abordagem que visa aumentar o n´ıvel de con-
ﬁdencialidade dos dados usando fragmentac¸ ˜ao, decomposic¸ ˜ao e dispers˜ao de informac¸ ˜oes
para dividir os dados em partes irreconhec´ıveis e armazen´a-los hosts distribu´ıdos na nuvem
[Branco-Jr. et al. 2016].

3. Formulac¸ ˜ao Matem´atica

O problema tratado pela abordagem SaFER pode ser deﬁnido como um problema de
programac¸ ˜ao matem´atica mista como descrito a seguir. Seja N o conjunto de ativac¸ ˜oes
de um workﬂow a serem executadas. Vamos deﬁnir M = M ∪ B como o conjunto de to-
dos os recursos computacionais envolvidos na execuc¸ ˜ao, onde M ´e o conjunto de todas as
VMs com capacidade de processamento/armazenamento local, e B ´e o conjunto de buckets
que possuem apenas capacidade de armazenamento (i.e., n˜ao processam dados). Cada VM

j ∈ M possui uma capacidade de armazenamento m´axima cmj e um custo ﬁnanceiro de
cM
(por unidade de tempo). Similarmente, cada bucket j ∈ B possui uma faixa de inter-
j
valos de uso de dados {0...|Lj|}, onde cada intervalo l ∈ Lj possui um tamanho smjl e
um custo ﬁnanceiro de uso cB
jl (L0 representa que o bucket est´a vazio). Essa deﬁnic¸ ˜ao de
uso de intervalo de dados no bucket segue a organizac¸ ˜ao de provedores como Amazon AWS
e Azure. Vamos tamb´em deﬁnir D = Ds ∪ Dd como o conjunto de todos os dados pro-
duzidos/consumidos em uma execuc¸ ˜ao do workﬂow, onde cada dado d ∈ D tem tamanho
W (d) e pode ser tanto est´atico (Ds), previamente armazenado no seu recurso computacio-
nal de origem O(d) ∈ M (dados de entrada do workﬂow), ou dinˆamico (Dd), i.e., o dado
ser´a gerado durante a execuc¸ ˜ao do workﬂow. Al´em disso, para cada ativac¸ ˜ao i ∈ N , deﬁ-
nimos um conjunto de dados de entrada ∆in(i) ⊆ D necess´ario para sua execuc¸ ˜ao, e um
conjunto de dados de sa´ıda ∆out(i) ⊆ Dd gerados pela execuc¸ ˜ao da ativac¸ ˜ao. Deﬁnimos
tamb´em os requisitos do usu´ario cmax como o custo ﬁnanceiro m´aximo permitido (i.e., bud-
get)), e tmax como o tempo m´aximo de processamento do workﬂow (i.e., deadline), onde
T = {1, . . . , tmax} ´e deﬁnido como o conjunto de per´ıodos de tempo. Denotamos tij como
o tempo de processamento da ativac¸ ˜ao i ∈ N executada na VM j ∈ M . Similarmente, de-
−→
t djp como o tempo gasto pela VM j ∈ M para ler o dado d ∈ D armazenado no
notamos
←−
recurso computacional p ∈ M , e
t djp como o tempo gasto pela VM j ∈ M para escrever o
dado d ∈ Dd no recurso computacional p ∈ M .

Em relac¸ ˜ao aos requisitos de conﬁdencialidade do workﬂow, deﬁnimos o grafo de
conﬂito de dados (nesse artigo usamos arquivos como a unidade m´ınima, mas caso uma
fragmentac¸ ˜ao dos dados fosse aplicada, cada fragmento seria considerado um v´ertice do
grafo) Gc = (D, Eh ∪ Es), formado pelo conjunto de v´ertices (dados) D e o conjunto de
arestas Eh ∪ Es. O conjunto Eh ´e deﬁnido como o conjunto de pares de dados (d1, d2)
onde d1 ∈ D e d2 ∈ D que n˜ao podem ser armazenados no mesmo recurso computacional
por raz˜oes de conﬁdencialidade. Similarmente, o conjunto de arestas Es ´e deﬁnido como o
conjunto de pares de dados (d1, d2) que se forem armazenados no mesmo recurso compu-
tacional, uma penalidade de conﬁdencialidade pd1d2 deve ser cobrada. Deﬁnimos tamb´em
R como o conjunto dos requisitos de seguranc¸a presentes nas ativac¸ ˜oes do workﬂow, onde
cada requisito r ∈ R pode variar de intensidade no intervalo {0...lr
max}. Um requisito de
seguranc¸a pode ser a ativac¸ ˜ao i ∈ N requisitar execuc¸ ˜oes em VMs que oferec¸am alto n´ıvel
de criptograﬁa (o nivel pode ser deﬁnido de acordo com as intensidades dos intervalos,
explicadas a seguir). Dessa forma, deﬁnimos que cada ativac¸ ˜ao i ∈ N possui uma neces-
task em relac¸ ˜ao ao requisito r ∈ R, e que cada VM j ∈ M pode oferecer lrj
sidade de lri
vm
de seguranc¸a em relac¸ ˜ao a este requisito (onde 0 ≤ lri
max). Dessa forma, pode-
mos deﬁnir o grau de exposic¸ ˜ao m´axima de conﬁdencialidade de um escalonamento como
smax = (cid:80)
max + (cid:80)
pd1d2. A Tabela 3 descreve o conjunto de vari´aveis
bin´arias e cont´ınuas do modelo descrito a seguir:

r∈R |N | · lr

vm ≤ lr

task, lrj

(d1,d2)∈Es

Var.
xijt
−→x idjpt
←−x idjpt
ydjt
ydj
wd1d2
bjl
vjt
Var.
eri
qjl
zT
j
zT

Descric¸ ˜ao das vari´aveis bin´arias
Indica se a ativac¸ ˜ao i ∈ N comec¸a sua execuc¸ ˜ao na VM j ∈ M no per´ıodo t ∈ T , ou n˜ao.
Indica se a ativac¸ ˜ao i ∈ N executando na VM j ∈ M comec¸a a ler o dado d ∈ ∆in(i) armazenado no recurso p ∈ M no per´ıodo t ∈ T , ou n˜ao.
Indica se a ativac¸ ˜ao i ∈ N executando na VM j ∈ M comec¸a a escrita do dado d ∈ ∆out(i) no recurso p ∈ M no per´ıodo t ∈ T , ou n˜ao.
Indica se o dado d ∈ D est´a armazenado no recurso j ∈ M no per´ıodo t ∈ T , ou n˜ao.
Indica se o dado d ∈ D est´a armazenado no recurso j ∈ M em algum momento.
Indica se os dados d1 e d2 est˜ao armazenados no mesmo local ou n˜ao, onde (d1, d2) ∈ Es.
Indica se o bucket j ∈ B est´a sendo usado no intervalo l ∈ Lj , ou n˜ao.
Indica se a VM j ∈ M est´a contratada no per´ıodo t ∈ T , ou n˜ao.
Descric¸ ˜ao das var´ıaveis cont´ınuas
Indica o n´ıvel de exposic¸ ˜ao da ativac¸ ˜ao i ∈ N em relac¸ ˜ao ao requisito de seguranc¸a r ∈ R.
Contem a quantidade (tamanho) total de dados alocada no bucket j ∈ B no intervalo l ∈ Lj .
Indica o tempo total de uso da VM j ∈ M .
Indica o tempo total de processamento do workﬂow (makespan).

A func¸ ˜ao objetivo procura minimizar 3 fatores: o makespan (1), o custo ﬁnanceiro (2) e
o n´ıvel de exposic¸ ˜ao de conﬁdencialidade (3), onde os pesos αt, αb e αs deﬁnem a re-
levˆancia de cada um destes 3 objetivos, respectivamente. Al´em disso, o valor de cada um
dos objetivos ´e normalizado por seus valores m´aximos deﬁnidos por tmax, cmax e smax res-
pectivamente.

min

αt · (

zT

tmax

)+

(cid:88)

αb · (

j∈M

j zT
cM
j
cmax

(cid:88)

(cid:88)

+

j∈B

l∈Lj

cB
jlqjl
cmax

)

(cid:88)

(cid:88)

αs · (

r∈R

i∈N

eri
smax

+

(cid:88)

pd1d2

wd1 d2

(d1,d2)∈Es

smax

)

(1)

(2)

(3)

As Restric¸ ˜oes (4) garantem que cada ativac¸ ˜ao ser´a executada, enquanto que as

Restric¸ ˜oes (5) e (6) obrigam que cada operac¸ ˜ao de leitura e escrita deve ser realizada.

(cid:88)

(cid:88)

j∈M

t∈T

(cid:88)

(cid:88)

t∈T

j∈M
p∈M

(cid:88)

(cid:88)

t∈T

j∈M
p∈M

xijt = 1,

−→x idjpt = 1,

←−x idjpt = 1,

∀i ∈ N (4)

∀i ∈ N, ∀d ∈ ∆in(i) (5)

∀i ∈ N, ∀d ∈ ∆out(i) (6)

As Restric¸ ˜oes (7) garantem que cada dado d ∈ ∆out(i) s´o pode ser escrito, se a
ativac¸ ˜ao i foi executada anteriormente. Al´em disso, as Restric¸ ˜oes (8) obrigam que cada
dado d n˜ao possa ser escrito antes da execuc¸ ˜ao da ativac¸ ˜ao i (respons´avel por sua escrita).

←−x idjpt ≤

t−tij
(cid:88)

q=1

xijq ,

←−x idjpt = 0

∀i ∈ N, ∀d ∈ ∆out(i), ∀j ∈ M, ∀p ∈ M , ∀t = (tij + 1) · · · TM (7)

∀i ∈ N, ∀d ∈ ∆out(i), ∀j ∈ M, ∀p ∈ M , 1 ≤ t ≤ tij (8)

As Restric¸ ˜oes (9) estabelecem que uma ativac¸ ˜ao s´o pode ser executada se todas suas

leituras de dados de entrada foram anteriormente conclu´ıdas.

xijt ≤

t−

−→
t djp
(cid:88)

(cid:88)

p∈M

q=1

−→x idjpq ,

∀i ∈ N, ∀d ∈ ∆in(i), ∀j ∈ M, ∀t ∈ T, such (t −

−→
t djp) ≥ 1 (9)

As Restric¸ ˜oes (10) garantem que apenas uma ac¸ ˜ao ativa (execuc¸ ˜ao, leitura ou escrita)
possa ser realizada em cada per´ıodo de tempo em cada VM. Por outro lado, as Inequac¸ ˜oes
(11) deﬁnem que ac¸ ˜oes passivas (um dado ser lido ou ser escrito) podem ser realizadas em
paralelo. Note que se uma ac¸ ˜ao (ativa ou passiva) ´e realizada por uma VM j no per´ıodo t, a
vari´avel de contratac¸ ˜ao vjt ter´a valor 1, indicando que a m´aquina est´a contratada.

(cid:88)

t
(cid:88)

xijq +

(cid:88)

(cid:88)

(cid:88)

t
(cid:88)

i∈N

q=max (1,t−tij +1)

i∈N

d∈∆out (i)

p∈M

r=max (1,t−

←−x idjpr +

←−
t djp+1)

(cid:88)

(cid:88)

(cid:88)

t
(cid:88)

i∈N

d∈∆in (i)

p∈M

r=max (1,t−

−→
t djp+1)

−→x idjpr ≤ vjt,

(cid:88)

(cid:88)

(cid:88)

t
(cid:88)

i∈N

d∈∆out (i)

p∈M

r=max (1,t−

←−
t dpj +1)

←−x idpjr +

(cid:88)

(cid:88)

(cid:88)

t
(cid:88)

i∈N

d∈∆in (i)

p∈M

r=max (1,t−

−→
t dpj +1)

−→x idpjr ≤ |M |.vjt,

∀j ∈ M, ∀t ∈ T (10)

∀j ∈ M, ∀t ∈ T (11)

As Restric¸ ˜oes (12) estabelecem que n˜ao existem dados dinˆamicos gerados no in´ıcio
da execuc¸ ˜ao, enquanto que as Restric¸ ˜oes (13) e (14) estabelecem que os dados est´aticos
est˜ao armazenados em seus respectivos recursos origem.

ydj1 = 0,

ydj1 = 0,

ydjt = 1,

∀d ∈ Dd, ∀j ∈ M (12)

∀d ∈ Ds | j ∈ (M \O(d)) (13)

∀d ∈ Ds | j ∈ O(d), ∀t ∈ T (14)

As Restric¸ ˜oes (15) e (16) conectam as vari´aveis de armazenamento y com as
vari´aveis de escrita ←−x e as de leitura −→x , garantindo uma leitura e escrita consistente com os
dados armazenados tanto em VMs quanto em buckets (M ).

ydp(t+1) = ydpt +

(cid:88)

j∈M

←−x

idjp(t−

←−
t djp+1)

−→x idjpt ≤ ydpt

(cid:88)

j∈M

, ∀d ∈ D, ∀p ∈ M , ∀t ∈ {1 . . . tmax − 1},

such (t −

←−
t djp + 1) ≥ 1 and d ∈ ∆out(i) (15)

, ∀i ∈ N, ∀d ∈ ∆in(i), ∀p ∈ M , ∀t ∈ T (16)

A capacidade de armazenamento das m´aquinas ´e limitado pelas Restric¸ ˜oes (17). As
Restric¸ ˜oes (18) conectam a ´ultima operac¸ ˜ao de escrita em cada m´aquina com a vari´avel do
tempo total de execuc¸ ˜ao do workﬂow zT . Al´em disso, as Restric¸ ˜oes (19) relacionam as
vari´aveis de contratac¸ ˜ao vjt e zT
j com o objetivo de estabelecer o custo ﬁnanceiro de cada
VM j, enquanto que as Restric¸ ˜oes (20) asseguram que os custos ﬁnanceiros n˜ao ultrapassem
o orc¸amento m´aximo dispon´ıvel.

(cid:88)

d∈D

ydjtW (d) ≤ cmj

←−x idjpt · (t +

←−
t djp) ≤ zT

vjt · t ≤ zT
j ,
(cid:88)
j zT
cM

j +

j∈M

(cid:88)

(cid:88)

j∈B

l∈Lj

cB
jlqjl ≤ cmax

, ∀j ∈ M , ∀t ∈ T (17)

, ∀i ∈ N, ∀d ∈ ∆out(i), ∀j ∈ M, ∀p ∈ M , ∀t ∈ T (18)

∀j ∈ M, ∀t ∈ T (19)

(20)

As seguintes restric¸ ˜oes operacionais (21) precisam ser satisfeitas: uma ativac¸ ˜ao i
s´o pode iniciar sua execuc¸ ˜ao se todos seus arquivos de entrada d ∈ ∆in(i) j´a estiverem
dispon´ıveis para leitura.

(cid:88)

−→x idjpt · |∆in(i)| ≤

(cid:88)

(cid:88)

ygpt

p∈M

g∈∆in(i)

p∈M

, ∀i ∈ N, ∀d ∈ ∆in(i), ∀j ∈ M, ∀t ∈ T (21)

As Restric¸ ˜oes (22) conectam as vari´aveis de armazenamento (temporais) y com as
vari´aveis de armazenamento (atemporais) y. Restric¸ ˜oes (23) asseguram que dados conﬂi-
tantes n˜ao sejam armazenados no mesmo recurso) (arestas fortes). De forma similar, as
Inequac¸ ˜oes (24) garantem que se dois dados conﬂitantes s˜ao armazenados no mesmo re-
curso, a vari´avel de penalizac¸ ˜ao w ter´a valor 1 (arestas fracas). As Restric¸ ˜oes (25) me-
dem o n´ıvel de exposic¸ ˜ao (risco) de se executar uma ativac¸ ˜ao em relac¸ ˜ao aos requisitos de
seguranc¸a.

ydjt ≤ ydj

yd1j + yd2j ≤ 1
yd1j + yd2j ≤ 1 + wd1 d2
lri
task −

(cid:88)

(cid:88)

lrj
vmxijt ≤ eri

j∈M

t∈T

, ∀d ∈ D, ∀j ∈ M , ∀t ∈ T (22)

, ∀(d1, d2) ∈ Eh, ∀j ∈ M (23)

, ∀(d1, d2) ∈ Es, ∀j ∈ M (24)

, ∀i ∈ N, ∀r ∈ R (25)

As Equac¸ ˜oes (26) deﬁnem o tamanho total dos dados armazenados em cada bucket.
As Restric¸ ˜oes (27) estabelecem que apenas um intervalo de armazenamento l ∈ Lj ´e usado
em cada bucket j ∈ B, enquanto as Restric¸ ˜oes (28) limitam a quantidade de dados armaze-
nados em cada intervalo no bucket. Note que as Restric¸ ˜oes (27) e (29) estabelecem em qual
intervalo de uso de dados (bjl) o bucket se encontra, de acordo com a quantidade de dados to-
tal (qjl) armazenada nele. Por ﬁm, as Restric¸ ˜oes (30) imp˜oe que se um intervalo l ∈ Lj\{0}
do bucket j ∈ B est´a em uso, ent˜ao deve existir pelo menos um dado armazenado no bucket
j.

(cid:88)

l∈Lj
(cid:88)

l∈Lj
(cid:88)

d∈D

qjl =

(cid:88)

d∈D

ydj W (d)

bjl = 1

ydj W (d) ≤

(cid:88)

l∈Lj

smjlbjl

smj(l−1).bjl ≤ qjl ≤ smjl.bjl

bjl ≤

(cid:88)

d∈D

ydj

, ∀j ∈ B (26)

, ∀j ∈ B (27)

, ∀j ∈ B (28)

, ∀j ∈ B, ∀l ∈ Lj \{0} (29)

, ∀j ∈ B, ∀l ∈ Lj \{0} (30)

4. Abordagem Heur´ıstica para Escalonamento de Workﬂows com Restric¸ ˜oes de

Conﬁdencialidade

O problema modelado na Sec¸ ˜ao 3 pode ser resolvido por m´etodos exatos para instˆancias
pequenas (10 ativac¸ ˜oes ou menos). Por´em, s˜ao impratic´aveis para instˆancias do mundo
real pois consomem muitos recursos computacionais elevando demasiadamente o tempo de
execuc¸ ˜ao. As Metaheur´ısticas s˜ao m´etodos que orquestram uma interac¸ ˜ao entre procedi-
mentos de melhorias locais e estrat´egias de n´ıvel superior para criar um processo capaz de
escapar dos ´otimos locais efetuando buscas no espac¸o de soluc¸ ˜ao [Gendreau et al. 2010],
apresentando-se como uma boa alternativa aos m´etodos exatos. Logo, propomos uma
heur´ıstica construtiva gulosa e estoc´astica como parte da abordagem SaFER, denominada
SaFER-hcg, para resolver o escalonamento de ativac¸ ˜oes com restric¸ ˜ao de conﬁdencialidade.
Nosso objetivo ´e encontrar boas soluc¸ ˜oes para instˆancias de grande porte.

No Algoritmo 1, construtivo, o lac¸o mais externo (linha 2) itera at´e que todas as
ativac¸ ˜oes sejam executadas em alguma VM. Nesse lac¸o, ´e criada uma Lista de Candidatos
(LC) combinando cada ativac¸ ˜ao ainda n˜ao escalonada i ∈ N com todas as VMs dispon´ıveis
j ∈ M (linhas 4 a 9). Por´em, nem todas as ativac¸ ˜oes est˜ao prontas para serem adicionadas
`a LC porque dependem se as dependˆencias de dados foram satisfeitas, i.e., se seus arquivos
de entrada j´a est˜ao dispon´ıveis (linha 6). Para calcularmos o “custo” de cada candidato,
o inserimos na soluc¸ ˜ao atual S e calculamos o valor da func¸ ˜ao objetivo (F O) descrita pe-
las Equac¸ ˜oes (1-3). Dentro do c´alculo da func¸ ˜ao objetivo, deﬁnimos tamb´em os recursos
computacionais W ⊆ M que ir˜ao armazenar os dados de sa´ıda da ativac¸ ˜ao i da seguinte
forma: para cada dado d ∈ ∆out(i) selecionamos aleatoriamente β recursos computacionais
dentre o conjunto M e escolhemos o de menor acr´escimo ao valor da F O que n˜ao ir´a ge-
rar inviabilidade em relac¸ ˜ao `as restric¸ ˜oes de capacidade e conﬁdencialidade para realizar a
gravac¸ ˜ao do dado. Em seguida, ordenamos a LC em func¸ ˜ao do valor do custo (F O) de cada
soluc¸ ˜ao (linha 9) e criamos uma Lista Restrita de Candidatos (LRC) contendo os melhores
candidatos usando o parˆametro αLRC (linha 10). Posteriormente, um candidato ´e selecio-
nado aleatoriamente de LRC e adicionado ao escalonamento atual S (linhas 11 e 12). O
procedimento ´e repetido at´e que todas as ativac¸ ˜oes do workﬂow sejam escalonadas. Dadas
as caracter´ısticas aleat´orias do algoritmo, o procedimento construtivo pode gerar diferen-
tes soluc¸ ˜oes para um mesmo dado de entrada, i.e., para uma mesma instˆancia do workﬂow.

Em nossos experimentos, executamos o algoritmo da SaFER-hcg 100 vezes armazenando,
sempre, o melhor resultado encontrado.

Algoritmo 1: Heur´ıstica Construtiva Gulosa-Aleat´oria SaFER-hcg

Dados: αLRC , β, αt, αb, αs, tmax , cmax
Resultado: escalonamento S

LC ← ∅
para cada i ∈ N fac¸a

1 S ← ∅, N ← N
2 enquanto N (cid:54)= ∅ fac¸a
3
4
5
6
7
8
9
10
11
12
13
14 retorna S

para cada j ∈ M fac¸a

se ∆in(i) j´a foi gerado ent˜ao

W, F O ← CalculaF O(S, i, j, tmax, cmax, β, αt, αb, αs)
LC ← LC ∪ (i, j, W )

ordena LC por F O
LRC ← ListaRestritaDeCandidatos(LC, αLRC )
(i∗, j∗, W ∗) ← Sorteia(LRC)
S ← S ∪ (i∗, j∗, W ∗)
N ← N \{i∗}

Tabela 1. Detalhes das inst ˆancias utilizadas nos testes experimentais

Instˆancia
Sint´etica 5 A
Sint´etica 5 B
Sint´etica 5 C
Sint´etica 10 A
Sint´etica 10 B
Sint´etica 10 C
Sint´etica 15 A
Sint´etica 15 B
Sint´etica 15 C
CyberShake 30
CyberShake 50
CyberShake 100

#Ativac¸ ˜oes
2
2
1
4
3
4
5
5
5
30
50
100

#Arquivos
3
3
4
6
7
6
10
10
10
49
79
154

tmax
32
32
40
50
36
60
40
30
40
400
500
600

cmax
120
120
80
168
198
440
154
54
136
200
250
300

Instˆancia
Epigenomics 24
Epigenomics 46
Epigenomics 100
Inspiral 30
Inspiral 50
Inspiral 100
Montage 25
Montage 50
Montage 100
Sipht 30
Sipht 60
Sipht 100

#Ativac¸ ˜oes
24
46
100
30
50
100
25
50
100
29
58
97

tmax
#Arquivos
5.000
38
71 10.000
152 50.000
1.500
47
2.000
77
3.000
151
250
54
500
107
1.000
215
3.500
963
4.000
1.100
6.000
1.223

cmax
1.500
3.000
30.000
1.000
1.500
2.000
125
250
500
2.000
2.500
3.500

5. Avaliac¸ ˜ao Experimental

Nesta sec¸ ˜ao, comparamos a soluc¸ ˜ao heur´ıstica SaFER-hcg (Sec¸ ˜ao 4) com a soluc¸ ˜ao exata
fornecida pelo modelo matem´atico (i.e., baseline). Para compararmos as soluc¸ ˜oes, foram
criadas 9 instˆancias sint´eticas de execuc¸ ˜oes de workﬂows, pequenas o suﬁciente para que
o m´etodo exato encontre alguma soluc¸ ˜ao. Al´em disso, executamos a soluc¸ ˜ao heur´ıstica
SaFER-hcg para instˆancias reais de workﬂows com caracter´ısticas distintas e invi´aveis para
execuc¸ ˜ao com o m´etodo exato. De forma a garantir a reprodutibilidade da abordagem pro-
posta, o c´odigo-fonte e as conﬁgurac¸ ˜oes de ambiente e dados de entrada se encontram dispo-
nibilizados em https://github.com/UFFeScience/Wf-Security. Os m´etodos
heur´ısticos e exatos foram implementados com GCC 4.8.5 e IBM ILOG CPLEX 12.8;
executados em um computador com processador Intel®i5-7300U 2.60GHz, com 16GB de
RAM e SO Linux Fedora 31. Al´em disso, cada teste foi repetido 10 vezes (com semen-
tes aleat´orias diferentes) armazenando-se a m´edias dos resultados. O valor dos parˆametros
de entrada αLRC = 0.5 e β = 4 foram deﬁnidos de forma emp´ırica e as ponderac¸ ˜oes da
func¸ ˜ao objetivo αt, αb, αs foram deﬁnidas como 0,3, 0,3 e 0,4, respectivamente, baseados
na experiˆencia em trabalhos anteriores do grupo [Teylo et al. 2017].

Considerando o recursos computacionais necess´arios para a viabilidade da soluc¸ ˜ao,
utilizamos seguintes parˆametros para execuc¸ ˜ao dos workﬂows: 4 VMs com diferentes capa-
cidade de armazenamento (80, 120, 160 e 200 GBs); slowdown (quanto menor, maior o po-
der de processamento) (1,53, 0,77, 0,38 e 0,19); velocidade do enlace (4, 9, 10 e 10 Mbps);
e o custo, por minuto, de processamento em d´olares (US$ 0,02, US$ 0,09, US$ 0,16 e US$

0,33). Em se tratando da quantidade de buckets, deﬁnimos 2 para as instˆancias sint´eticas
e variados n´umeros para as demais instˆancias (valores apresentados a seguir). Quanto a
capacidade de armazenamento, velocidade do enlace e prec¸o cobrado por GBs de dados ar-
mazenados de cada bucket, deﬁnimos como 50 TB, 25 Mbps e US$ 0,023, respectivamente.
Para as instˆancias p´ublicas de workﬂows tradicionais (i.e., benchmarks) foram utilizadas as
seguintes: (i) Montage, que cria uma imagem em mosaico a partir de fotos astronˆomicas me-
nores, (ii) Cybershake, usado para identiﬁcar terremotos na Calif´ornia, (iii) Inspiral, usado
para identiﬁcar ondas gravitacionais, (iv) Epigenomics, para sequenciamento genˆomico e
(v) Sipht, que busca por RNA n˜ao transcrito no NCBI. Foram determinadas as seguintes
quantidades de buckets para as instˆancias CyberShake 30 (o n´umero no nome da instˆancia
deﬁne a quantidade de ativac¸ ˜oes a serem escalonadas), CyberShake 50, CyberShake 100,
Epigenomics 24, Epigenomics 46, Epigenomics 100, Inspiral 30, Inspiral 50, Inspiral 100,
Montage 25, Montage 50, Montage 100, Sipht 30, Sipht 50, Sipht 100: 2, 8, 19, 6, 6, 44,
3, 8, 9, 6, 11, 28, 10, 10 e 16 , respectivamente. A Tabela 1 apresenta os valores tmax, cmax,
a quantidade de ativac¸ ˜oes e a quantidade de arquivos (tanto os de entrada quanto os gerados
durante a execuc¸ ˜ao do workﬂow) escolhidos para cada instˆancia utilizada nos experimentos.

Criamos um script para ler os arquivos que cont´em as instˆancias dos workﬂows (em
formato XML) e atribuir restric¸ ˜oes (arestas fortes e fracas) entre os arquivos automatica-
mente, (i.e., o grafo de conﬂitos). Para o presente experimento, utilizamos a seguinte
heur´ıstica para criac¸ ˜ao do grafo de conﬂitos: (i) arquivos de entrada de uma ativac¸ ˜ao s˜ao
penalizados (com um valor padr˜ao de 1) se armazenados junto dos arquivos de sa´ıda desta
mesma ativac¸ ˜ao (arestas fracas), (ii) arquivos gerados por ativac¸ ˜oes em um mesmo n´ıvel
do workﬂow (i.e., gerados por ativac¸ ˜oes “irm˜as”) n˜ao podem ser armazenados juntos (ares-
tas fortes). No caso do Montage, esta ´ultima restric¸ ˜ao evita tanto que arquivos cabec¸alho
e corpo sejam armazenados juntos, e que arquivos que componham partes diferentes da
soluc¸ ˜ao tamb´em sejam armazenados juntos (e.g., dados gerados por diferentes ativac¸ ˜oes
que formam um mosaico). Quanto aos requisitos deﬁnidos na Sec¸ ˜ao 3, utilizamos valores
que permitissem que todas as ativac¸ ˜oes pudessem ser executadas em qualquer VM, pois fo-
camos nas restric¸ ˜oes de conﬁdencialidade, uma vez que, requisitos como autenticac¸ ˜ao ou
criptograﬁa s˜ao funcionalidades j´a estudadas em trabalhos anteriores (vide Sec¸ ˜ao 2).

A Tabela 2 apresenta os resultados das execuc¸ ˜oes das heur´ıstica SaFER-hcg e a
soluc¸ ˜ao exata. As colunas Instˆancia, F. O., Makespan, Custo, Conﬁd., Tempo representam,
respectivamente, as instˆancias de workﬂows, func¸ ˜ao objetivo, tempo de execuc¸ ˜ao, custo e
risco de exposic¸ ˜ao, das execuc¸ ˜oes da heur´ıstica SaFER-hcg e do m´etodo exato. Para uma
melhor interpretac¸ ˜ao, a coluna Conﬁd. foi normalizada pelo fator Smax. Os resultados indi-
cam que o modelo matem´atico foi capaz de retornar soluc¸ ˜oes ´otimas para todas as instˆancias
sint´eticas, com excec¸ ˜ao das instˆancias Sint´etica 15 B e Sint´etica 15 C que interromperam
sua execuc¸ ˜ao ap´os uma hora (tempo limite conﬁgurado para a execuc¸ ˜ao do CPLEX). Por
outro lado, a SaFER-hcg conseguiu, para as mesmas instˆancias, produzir boas soluc¸ ˜oes com
diferenc¸a de, em m´edia, 14% em relac¸ ˜ao a soluc¸ ˜ao encontrada pelo m´etodo exato, mas n˜ao
conseguiu encontrar a soluc¸ ˜ao ideal para 6 das instˆancias sint´eticas. Uma explicac¸ ˜ao para a
diferenc¸a entre o m´etodo exato e a SaFER-hcg ´e que o m´etodo exato permite que as leituras
de todas as ativac¸ ˜oes iniciais ocorram antes de qualquer execuc¸ ˜ao, enquanto que a heur´ıstica
SaFER-hcg agrega leitura, execuc¸ ˜ao e escrita atomicamente; isso faz com que o recurso que
cont´em os arquivos de entrada tenha que ser alocado por mais tempo. ´E interessante notar
que os tempos de execuc¸ ˜ao para a SaFER-hcg s˜ao inferiores aos executados pelo CPLEX
(em torno de um cent´esimo de segundo).

Considerando que quanto menor os valores de Conﬁd. menor o risco de exposic¸ ˜ao
de dados conﬁdenciais, os valores baixos demonstram a eﬁciˆencia da abordagem proposta.
Por ´ultimo, somente a heur´ıstica SaFER-hcg conseguiu encontrar soluc¸ ˜oes para as instˆancias
maiores em tempo h´abil, comprovando, assim, sua importˆancia.

Tabela 2. Avaliac¸ ˜ao Experimental - SaFER-hcg versus Soluc¸ ˜ao Exata

Soluc¸ ˜ao Exata

F. O. Makespan (s) Custo (US$) Conﬁd. Tempo (s)
0,16
0,25
1,29
0,28
0,21
0,32
1.039,48
0,24
60,68
0,26
18,44
0,28
285,60
0,11
3.740,48 *
0,24
3.604,57 *
0,29

8,32
9,21
12,12
16,81
11,68
22,97
4,59
8,88
16,63

24,00
27,00
36,00
35,00
29,00
53,00
14,00
16,00
29,00

0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,07
0,09

Instˆancia
Sint´etica 5 A
Sint´etica 5 B
Sint´etica 5 C
Sint´etica 10 A
Sint´etica 10 B
Sint´etica 10 C
Sint´etica 15 A
Sint´etica 15 B
Sint´etica 15 C
CyberShake 30
CyberShake 50
CyberShake 100
Epigenomics 24
Epigenomics 46
Epigenomics 100
Montage 25
Montage 50
Montage 100
Inspiral 30
Inspiral 50
Inspiral 100
Sipht 30
Sipht 60
Sipht 100

Heur´ıstica (SaFER-hcg)
F. O. Makespan (s) Custo (US$) Conﬁd. Tempo (s)
0,01
0,25
0,01
0,28
0,01
0,32
0,01
0,33
0,01
0,28
0,01
0,31
0,01
0,15
0,01
0,29
0,01
0,34
0,19
0,27
0,78
0,39
7,15
0,46
0,12
0,42
0,40
0,43
7,24
0,53
0,11
0,34
0,41
0,42
2,25
0,49
0,15
0,33
1,59
0,35
19,13
0,37
3,26
0,49
17,16
0,55
52,63
0,46

8,32
9,35
12,12
22,42
14,24
24,78
4,90
11,60
17,81
93,02
172,95
249,78
1.204,41
2.773,21
26.285,44
522,29
944,01
1.566,27
68,70
155,43
329,79
1.440,52
2.105,33
2.571,43

24,00
27,00
36,00
48,00
31,00
58,00
19,00
20,00
36,80
158,30
294,20
420,40
2.698,50
4.928,40
43.722,10
857,90
1.532,50
2.509,20
130,30
266,60
561,90
2.869,70
3.664,10
4.622,00

0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,07
0,05
0,02
0,01
0,01
0,04
0,02
0,02
0,02
0,01
0,00
0,02
0,01
0,00
0,06
0,06
0,03

* A execuc¸ ˜ao foi interrompida ap´os uma hora de processamento.

6. Conclus˜oes e Trabalhos Futuros

Diversos experimentos s˜ao modelados como workﬂows. Esses workﬂows s˜ao, geralmente,
compostos por programas caixa preta com dependˆencia de dados entre eles. Muitos dados
s˜ao produzidos durante a execuc¸ ˜ao de workﬂows de larga-escala. Quando essa execuc¸ ˜ao ´e
feita na nuvem, comumente os SGWfs existentes armazenam os dados produzidos em um
storage compartilhado (i.e., bucket). Ao fazer isso, a conﬁdencialidade do experimento pode
ser comprometida. Caso um usu´ario malicioso venha a acessar esses arquivos, existe o risco
do mesmo inferir os resultados e/ou a estrutura do experimento. Esse risco deve ser evitado,
ou, pelo menos, minimizado. Nesse artigo, formalizamos o problema de escalonamento
de ativac¸ ˜oes de workﬂows com restric¸ ˜ao de conﬁdencialidade, modelando como um pro-
blema de otimizac¸ ˜ao combinat´oria para preservar a conﬁdencialidade dos dados produzidos
e armazenados na nuvem. Introduzimos uma formulac¸ ˜ao matem´atica e um procedimento
heur´ıstico chamado SaFER-hcg para resolver o problema de otimizac¸ ˜ao. A abordagem pro-
posta utiliza um grafo de conﬂitos para integrar o escalonamento de ativac¸ ˜oes com o plano de
dispers˜ao dos dados determinando as ´areas de armazenamento para os arquivos produzidos
durante a execuc¸ ˜ao, respeitando os limites de capacidade. A abordagem proposta foi ava-
liada com uma s´erie de instˆancias de workﬂows sint´eticos e reais, e se mostrou promissora
no que tange a garantia da conﬁdencialidade ao mesmo tempo em que foi capaz de minimi-
zar o makespan. Como trabalho futuro, pretendemos implementar uma metaheur´ıstica (e.g.,
GRASP) a ﬁm de melhorar a qualidade da soluc¸ ˜ao heur´ıstica proposta, al´em de implementar
o SaFER-hcg no SGWf SciCumulus.

Referˆencias

Abazari, F., Analoui, M., Takabi, H., e Fu, S. (2019). Mows: multi-objective workﬂow sche-
duling in cloud computing based on heuristic algorithm. Simulation Modelling Practice
and Theory, 93:119–132.

Branco-Jr., E. C., Monteiro, J. M., Reis, R., e Machado, J. C. (2016). A new mechanism to
preserving data conﬁdentiality in cloud database scenarios. In ICEIS, volume 291, pages
261–283. Springer.

de Oliveira, D., Liu, J., e Pacitti, E. (2019). Data-Intensive Workﬂow Management: For
Clouds and Data-Intensive and Scalable Computing Environments. Synthesis Lectures
on Data Management. Morgan & Claypool Publishers.

de Oliveira, D., Ogasawara, E. S., Bai˜ao, F. A., e Mattoso, M. (2010). Scicumulus: A
lightweight cloud middleware to explore many task computing paradigm in scientiﬁc
workﬂows. In IEEE CLOUD 2010, Miami, pages 378–385.

Deelman, E., Vahi, K., Juve, G., Rynge, M., Callaghan, S., Maechling, P., Mayani, R., Chen,
W., da Silva, R. F., Livny, M., e Wenger, R. K. (2015). Pegasus, a workﬂow management
system for science automation. FGCS, 46:17–35.

Ennajjar, I., Tabii, Y., e Benkaddour, A. (2017). Securing data in cloud computing by

classiﬁcation. BDCA’17, New York, NY, USA. ACM.

Freire, J., Koop, D., Santos, E., e Silva, C. T. (2008). Provenance for Computational Tasks:

A Survey. Computing in Science & Engineering, pages 20–30.

Gendreau, M., Potvin, J.-Y., et al. (2010). Handbook of metaheuristics, volume 2. Springer.

Gonz´alez, L. M. V., Rodero-Merino, L., Caceres, J., e Lindner, M. A. (2009). A break in

the clouds: towards a cloud deﬁnition. Comp. Comm. Rev., 39(1):50–55.

Guerine, M., Stockinger, M. B., Rosseti, I., Simonetti, L. G., Oca˜na, K. A., Plastino, A., e de
Oliveira, D. (2019). A provenance-based heuristic for preserving results conﬁdentiality
in cloud-based scientiﬁc workﬂows. FGCS, 97:697 – 713.

Liu, J., Pacitti, E., Valduriez, P., e Mattoso, M. (2015). A survey of data-intensive scientiﬁc

workﬂow management. J. Grid Comput., 13(4):457–493.

Shishido, H. Y., Estrella, J. C., e Toledo, C. F. M. (2018). Multi-objective optimization for
workﬂow scheduling under task selection policies in clouds. In CEC, pages 1–8. IEEE.

Sujana, J. A. J., Revathi, T., Priya, T. S., e Muneeswaran, K. (2019). Smart pso-based
secured scheduling approaches for scientiﬁc workﬂows in cloud computing. Soft. Comp.,
23(5):1745–1765.

Tawfeek, M. A. e AbdulHamed, A. A. (2018). Service ﬂow management with multi-
objective constraints in heterogeneous computing. In ICCES, pages 258–263. IEEE.

Teylo, L., de Paula Junior, U., Frota, Y., de Oliveira, D., e de A. Drummond, L. M. (2017). A
hybrid evolutionary algorithm for task scheduling and data assignment of data-intensive
scientiﬁc workﬂows on clouds. Future Gener. Comput. Syst., 76:1–17.

